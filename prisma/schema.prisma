generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model accounting_record {
  id                                             Int           @id @default(autoincrement())
  debtor_id                                      Int?
  creditor_id                                    Int?
  donation_id                                    Int?
  guid                                           String        @unique(map: "UNIQ_107A6A722B6FCFB2") @db.VarChar(32)
  type                                           String        @db.VarChar(16)
  metadata                                       Json?
  created                                        DateTime      @db.DateTime(0)
  updated                                        DateTime      @db.DateTime(0)
  discr                                          String        @db.VarChar(20)
  purpose                                        String?       @db.VarChar(16)
  provider                                       String?       @db.VarChar(32)
  reference                                      String        @db.VarChar(64)
  is_gift                                        Boolean?
  amount                                         Int
  currency                                       String        @db.VarChar(3)
  tree_count                                     Decimal?      @db.Decimal(14, 2)
  status                                         String        @db.VarChar(64)
  debtor_name                                    String?       @db.VarChar(255)
  creditor_name                                  String?       @db.VarChar(255)
  payment_method                                 String?       @db.VarChar(32)
  fee                                            Int?
  net                                            Int?
  payment_date                                   DateTime?     @db.DateTime(0)
  bouquet_purpose                                String?       @db.VarChar(16)
  contribution                                   contribution? @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_107A6A724DC1279C")
  profile_accounting_record_debtor_idToprofile   profile?      @relation("accounting_record_debtor_idToprofile", fields: [debtor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_107A6A72B043EC6B")
  profile_accounting_record_creditor_idToprofile profile?      @relation("accounting_record_creditor_idToprofile", fields: [creditor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_107A6A72DF91AC92")

  @@index([donation_id], map: "IDX_107A6A724DC1279C")
  @@index([debtor_id], map: "IDX_107A6A72B043EC6B")
  @@index([creditor_id], map: "IDX_107A6A72DF91AC92")
}

model bank_account {
  id                                         Int               @id @default(autoincrement())
  user_profile                               Int
  created_by                                 Int?
  updated_by                                 Int?
  bank_name                                  String            @db.VarChar(255)
  account_holder                             String            @db.VarChar(255)
  iban                                       String?           @db.VarChar(50)
  bic                                        String?           @db.VarChar(50)
  aba                                        String?           @db.VarChar(50)
  swift                                      String?           @db.VarChar(50)
  is_active                                  Boolean
  is_default                                 Boolean
  created                                    DateTime          @db.DateTime(0)
  updated                                    DateTime          @db.DateTime(0)
  updated_at                                 DateTime?         @db.DateTime(0)
  deleted_at                                 DateTime?         @db.DateTime(0)
  fos_user_bank_account_updated_byTofos_user fos_user?         @relation("bank_account_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_53A23E0A16FE72E1")
  profile                                    profile           @relation(fields: [user_profile], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_53A23E0AD95AB405")
  fos_user_bank_account_created_byTofos_user fos_user?         @relation("bank_account_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_53A23E0ADE12AB56")
  platform_payout                            platform_payout[]

  @@index([updated_by], map: "IDX_53A23E0A16FE72E1")
  @@index([user_profile], map: "IDX_53A23E0AD95AB405")
  @@index([created_by], map: "IDX_53A23E0ADE12AB56")
}

model bank_transaction {
  id                                             Int              @id @default(autoincrement())
  donation_id                                    Int?
  nordigen_account_id                            Int
  created_by                                     Int?
  updated_by                                     Int?
  guid                                           String           @unique(map: "UNIQ_50BCB3AE2B6FCFB2") @db.VarChar(32)
  transaction_id                                 String?          @db.VarChar(64)
  amount                                         Int
  currency                                       String           @db.VarChar(3)
  booking_date                                   DateTime         @db.Date
  value_date                                     DateTime         @db.Date
  debtor_name                                    String?          @db.VarChar(255)
  debtor_account                                 String?          @db.VarChar(255)
  bank_transaction_code                          String?          @db.VarChar(16)
  information                                    String           @db.LongText
  status                                         String           @db.VarChar(16)
  donation_uid                                   String?          @db.VarChar(16)
  comment                                        String?          @db.LongText
  created                                        DateTime         @db.DateTime(0)
  updated                                        DateTime         @db.DateTime(0)
  deleted_at                                     DateTime?        @db.DateTime(0)
  fos_user_bank_transaction_updated_byTofos_user fos_user?        @relation("bank_transaction_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_50BCB3AE16FE72E1")
  contribution                                   contribution?    @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_50BCB3AE4DC1279C")
  fos_user_bank_transaction_created_byTofos_user fos_user?        @relation("bank_transaction_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_50BCB3AEDE12AB56")
  nordigen_account                               nordigen_account @relation(fields: [nordigen_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_50BCB3AEF5F10959")

  @@index([updated_by], map: "IDX_50BCB3AE16FE72E1")
  @@index([donation_id], map: "IDX_50BCB3AE4DC1279C")
  @@index([created_by], map: "IDX_50BCB3AEDE12AB56")
  @@index([nordigen_account_id], map: "IDX_50BCB3AEF5F10959")
}

model bouquet_plan_option {
  id                                                Int                    @id @default(autoincrement())
  bouquet_plan_id                                   Int
  bouquet_project_option_id                         Int
  created_by                                        Int?
  updated_by                                        Int?
  guid                                              String                 @unique(map: "UNIQ_B9CEC6CF2B6FCFB2") @db.VarChar(32)
  quantity                                          Int
  created                                           DateTime               @db.DateTime(0)
  updated                                           DateTime               @db.DateTime(0)
  project_plan                                      project_plan           @relation(fields: [bouquet_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B9CEC6CF13115195")
  fos_user_bouquet_plan_option_updated_byTofos_user fos_user?              @relation("bouquet_plan_option_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B9CEC6CF16FE72E1")
  bouquet_project_option                            bouquet_project_option @relation(fields: [bouquet_project_option_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B9CEC6CF549E5F4")
  fos_user_bouquet_plan_option_created_byTofos_user fos_user?              @relation("bouquet_plan_option_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B9CEC6CFDE12AB56")

  @@index([bouquet_plan_id], map: "IDX_B9CEC6CF13115195")
  @@index([updated_by], map: "IDX_B9CEC6CF16FE72E1")
  @@index([bouquet_project_option_id], map: "IDX_B9CEC6CF549E5F4")
  @@index([created_by], map: "IDX_B9CEC6CFDE12AB56")
}

model bouquet_project_option {
  id                                                                     Int                   @id @default(autoincrement())
  bouquet_project_id                                                     Int
  project_id                                                             Int
  created_by                                                             Int?
  updated_by                                                             Int?
  guid                                                                   String                @unique(map: "UNIQ_47F6800B2B6FCFB2") @db.VarChar(32)
  unit_cost                                                              Float
  created                                                                DateTime              @db.DateTime(0)
  updated                                                                DateTime              @db.DateTime(0)
  bouquet_plan_option                                                    bouquet_plan_option[]
  plant_project_bouquet_project_option_project_idToplant_project         plant_project         @relation("bouquet_project_option_project_idToplant_project", fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_47F6800B166D1F9C")
  fos_user_bouquet_project_option_updated_byTofos_user                   fos_user?             @relation("bouquet_project_option_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_47F6800B16FE72E1")
  plant_project_bouquet_project_option_bouquet_project_idToplant_project plant_project         @relation("bouquet_project_option_bouquet_project_idToplant_project", fields: [bouquet_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_47F6800B6E0637E8")
  fos_user_bouquet_project_option_created_byTofos_user                   fos_user?             @relation("bouquet_project_option_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_47F6800BDE12AB56")

  @@index([project_id], map: "IDX_47F6800B166D1F9C")
  @@index([updated_by], map: "IDX_47F6800B16FE72E1")
  @@index([bouquet_project_id], map: "IDX_47F6800B6E0637E8")
  @@index([created_by], map: "IDX_47F6800BDE12AB56")
}

model bouquet_project_project {
  bouquet_project_id                                                      Int
  project_id                                                              Int
  plant_project_bouquet_project_project_project_idToplant_project         plant_project @relation("bouquet_project_project_project_idToplant_project", fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_731DCA6A166D1F9C")
  plant_project_bouquet_project_project_bouquet_project_idToplant_project plant_project @relation("bouquet_project_project_bouquet_project_idToplant_project", fields: [bouquet_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_731DCA6A6E0637E8")

  @@id([bouquet_project_id, project_id])
  @@index([project_id], map: "IDX_731DCA6A166D1F9C")
  @@index([bouquet_project_id], map: "IDX_731DCA6A6E0637E8")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model certificate_data {
  donation_id Int?     @default(0)
  voucher_uid String?  @db.VarChar(30)
  owned_by_id Int?
  tree_count  Decimal  @db.Decimal(14, 2)
  created     DateTime @db.DateTime(0)

  @@ignore
}

model challenge {
  id                                                           Int          @id @default(autoincrement())
  challenger_treecounter_id                                    Int
  challenged_treecounter_id                                    Int?
  end_date                                                     Int?
  challenge_method                                             String       @db.VarChar(20)
  email                                                        String?      @db.VarChar(255)
  firstname                                                    String?      @db.VarChar(50)
  lastname                                                     String?      @db.VarChar(50)
  token                                                        String       @unique(map: "UNIQ_D70989515F37A13B") @db.VarChar(255)
  goal                                                         Int
  message                                                      String?      @db.LongText
  status                                                       String       @db.VarChar(20)
  created                                                      DateTime     @db.DateTime(0)
  updated                                                      DateTime     @db.DateTime(0)
  deleted_at                                                   DateTime?    @db.DateTime(0)
  treecounter_challenge_challenged_treecounter_idTotreecounter treecounter? @relation("challenge_challenged_treecounter_idTotreecounter", fields: [challenged_treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_D709895158A6B6C3")
  treecounter_challenge_challenger_treecounter_idTotreecounter treecounter  @relation("challenge_challenger_treecounter_idTotreecounter", fields: [challenger_treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_D7098951ED10E1B9")

  @@index([challenged_treecounter_id], map: "IDX_D709895158A6B6C3")
  @@index([challenger_treecounter_id], map: "IDX_D7098951ED10E1B9")
}

model competition {
  id                                        Int                      @id @default(autoincrement())
  owner_id                                  Int?
  created_by                                Int?
  updated_by                                Int?
  access                                    String                   @db.VarChar(10)
  is_featured                               Boolean
  name                                      String                   @db.VarChar(255)
  description                               String?                  @db.LongText
  slug                                      String                   @db.VarChar(255)
  contact                                   String?                  @db.VarChar(255)
  email                                     String?                  @db.VarChar(50)
  start_date                                DateTime?                @db.DateTime(0)
  end_date                                  DateTime                 @db.DateTime(0)
  is_live                                   Boolean
  image                                     String?                  @db.VarChar(255)
  competitor_count                          Int
  goal                                      Decimal                  @db.Decimal(17, 0)
  score                                     Decimal                  @db.Decimal(17, 0)
  score_planted                             Decimal                  @db.Decimal(17, 0)
  score_received                            Decimal                  @db.Decimal(17, 0)
  created                                   DateTime                 @db.DateTime(0)
  updated                                   DateTime                 @db.DateTime(0)
  updated_at                                DateTime?                @db.DateTime(0)
  deleted_at                                DateTime?                @db.DateTime(0)
  auto_enroll_pattern                       String?                  @db.VarChar(255)
  plant_project_id                          Int?
  filter_type                               String?                  @db.VarChar(20)
  guid                                      String                   @unique(map: "UNIQ_B50A2CB12B6FCFB2") @db.VarChar(32)
  fos_user_competition_updated_byTofos_user fos_user?                @relation("competition_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B50A2CB116FE72E1")
  treecounter                               treecounter?             @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B50A2CB17E3C61F9")
  fos_user_competition_created_byTofos_user fos_user?                @relation("competition_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B50A2CB1DE12AB56")
  plant_project                             plant_project?           @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B50A2CB1E83C4879")
  competition_enrollment                    competition_enrollment[]

  @@index([updated_by], map: "IDX_B50A2CB116FE72E1")
  @@index([owner_id], map: "IDX_B50A2CB17E3C61F9")
  @@index([created_by], map: "IDX_B50A2CB1DE12AB56")
  @@index([plant_project_id], map: "IDX_B50A2CB1E83C4879")
}

model competition_enrollment {
  id                                                                      Int          @id @default(autoincrement())
  competitor_id                                                           Int?
  competitor_reference_id                                                 Int?
  competition_id                                                          Int?
  created_by                                                              Int?
  updated_by                                                              Int?
  source                                                                  String       @db.VarChar(10)
  method                                                                  String?      @db.VarChar(50)
  token                                                                   String       @unique(map: "UNIQ_78CB37D95F37A13B") @db.VarChar(255)
  email                                                                   String?      @db.VarChar(50)
  firstname                                                               String?      @db.VarChar(50)
  lastname                                                                String?      @db.VarChar(50)
  status                                                                  String       @db.VarChar(20)
  score                                                                   Decimal      @db.Decimal(17, 2)
  score_planted                                                           Decimal      @db.Decimal(17, 2)
  score_received                                                          Decimal      @db.Decimal(17, 2)
  created                                                                 DateTime     @db.DateTime(0)
  updated                                                                 DateTime     @db.DateTime(0)
  deleted_at                                                              DateTime?    @db.DateTime(0)
  guid                                                                    String       @unique(map: "UNIQ_78CB37D92B6FCFB2") @db.VarChar(255)
  fos_user_competition_enrollment_updated_byTofos_user                    fos_user?    @relation("competition_enrollment_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_78CB37D916FE72E1")
  treecounter_competition_enrollment_competitor_reference_idTotreecounter treecounter? @relation("competition_enrollment_competitor_reference_idTotreecounter", fields: [competitor_reference_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_78CB37D949046F46")
  treecounter_competition_enrollment_competitor_idTotreecounter           treecounter? @relation("competition_enrollment_competitor_idTotreecounter", fields: [competitor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_78CB37D978A5D405")
  competition                                                             competition? @relation(fields: [competition_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_78CB37D97B39D312")
  fos_user_competition_enrollment_created_byTofos_user                    fos_user?    @relation("competition_enrollment_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_78CB37D9DE12AB56")

  @@unique([competition_id, competitor_id], map: "unique_competition_competitor")
  @@index([updated_by], map: "IDX_78CB37D916FE72E1")
  @@index([competitor_reference_id], map: "IDX_78CB37D949046F46")
  @@index([competitor_id], map: "IDX_78CB37D978A5D405")
  @@index([competition_id], map: "IDX_78CB37D97B39D312")
  @@index([created_by], map: "IDX_78CB37D9DE12AB56")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model contribution {
  id                                                                        Int                        @id @default(autoincrement())
  esri_id                                                                   Int?
  treecounter_log_id                                                        Int?
  treecounter_id                                                            Int?
  community_treecounter_id                                                  Int?
  gift_treecounter_id                                                       Int?
  tpo_id                                                                    Int?
  plant_project_id                                                          Int?
  tpo_recipient_proxy_id                                                    Int?
  tpo_donor_proxy_id                                                        Int?
  receipt_id                                                                Int?
  contribution_type                                                         String                     @db.VarChar(20)
  tree_count                                                                Decimal?                   @db.Decimal(14, 2)
  plant_date                                                                DateTime?                  @db.DateTime(0)
  tree_type                                                                 String?                    @db.VarChar(255)
  is_confirmed                                                              Boolean
  is_verified                                                               Boolean?
  created                                                                   DateTime                   @db.DateTime(0)
  updated                                                                   DateTime                   @db.DateTime(0)
  deleted_at                                                                DateTime?                  @db.DateTime(0)
  is_dirty                                                                  Boolean?
  discr                                                                     String                     @db.VarChar(20)
  remote_plant_project_uid                                                  String?                    @db.VarChar(255)
  remote_recipient_uid                                                      String?                    @db.VarChar(255)
  tree_classification                                                       String?                    @db.VarChar(255)
  tree_scientific_name                                                      String?                    @db.VarChar(255)
  tree_species                                                              String?                    @db.LongText
  geo_longitude                                                             Float?
  geo_latitude                                                              Float?
  country                                                                   String?                    @db.VarChar(5)
  uid                                                                       String?                    @unique(map: "UNIQ_EA351E15539B0606") @db.VarChar(50)
  remote_donor_uid                                                          String?                    @db.VarChar(255)
  remote_id                                                                 String?                    @db.VarChar(255)
  remote_uid                                                                String?                    @db.VarChar(255)
  amount                                                                    Decimal?                   @db.Decimal(10, 2)
  currency                                                                  String?                    @db.VarChar(3)
  gift_method                                                               String?                    @db.VarChar(20)
  payment_method                                                            String?                    @db.VarChar(20)
  payment_options                                                           String?                    @db.LongText
  is_paid                                                                   Boolean?
  payment_details                                                           String?                    @db.LongText
  origin                                                                    String?                    @db.VarChar(50)
  token                                                                     String?                    @unique(map: "UNIQ_EA351E155F37A13B") @db.VarChar(50)
  payment_status                                                            String?                    @db.VarChar(20)
  created_by                                                                Int?
  updated_by                                                                Int?
  payment_id                                                                String?                    @db.VarChar(255)
  recurrency_mnemonic                                                       String?                    @db.VarChar(20)
  geometry                                                                  String?                    @db.LongText
  context                                                                   String?                    @db.VarChar(255)
  comment                                                                   String?                    @db.LongText
  payment_recurrency_id                                                     Int?
  is_finalized                                                              Boolean?
  tenant_id                                                                 Int?
  guid                                                                      String?                    @unique(map: "UNIQ_EA351E152B6FCFB2") @db.VarChar(32)
  user_description                                                          String?                    @db.LongText
  verification_status                                                       String?                    @db.VarChar(32)
  verification_sources                                                      String?                    @db.LongText
  tax_deduction_country                                                     String?                    @db.VarChar(20)
  old_remote_id                                                             Int?
  payment_account_id                                                        Int?
  tax_receipt                                                               String?                    @db.LongText
  dtn_issue_date                                                            DateTime?                  @db.DateTime(0)
  dtn                                                                       String?                    @db.VarChar(64)
  dtn_cancellation_code                                                     String?                    @db.VarChar(64)
  dtn_cancellation_date                                                     DateTime?                  @db.DateTime(0)
  unit_cost                                                                 Float?
  donor_alias                                                               String?                    @db.VarChar(255)
  on_behalf                                                                 Boolean?
  planet_cash_account_id                                                    Int?
  profile_id                                                                Int?
  idempotency_key                                                           String?                    @db.VarChar(64)
  purpose                                                                   String?                    @db.VarChar(16)
  gateway                                                                   String?                    @db.VarChar(20)
  method                                                                    String?                    @db.VarChar(20)
  publish_profile                                                           Boolean?
  trees_allocated                                                           Int?
  allocation_priority                                                       String?                    @db.VarChar(16)
  allocation_notified                                                       DateTime?                  @db.DateTime(0)
  project_plan_id                                                           Int?
  quantity                                                                  Float?
  bouquet_donation_id                                                       Int?
  fee                                                                       Int?
  donor_absorbs_fee                                                         Boolean?
  bouquet_purpose                                                           String?                    @db.VarChar(16)
  metadata                                                                  String?                    @db.LongText
  target_amount                                                             Int?
  target_currency                                                           String?                    @db.VarChar(3)
  project_currency                                                          String?                    @db.VarChar(3)
  project_exchange_rate                                                     Float?
  accounting_record                                                         accounting_record[]
  bank_transaction                                                          bank_transaction[]
  fos_user_contribution_updated_byTofos_user                                fos_user?                  @relation("contribution_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E1516FE72E1")
  contribution                                                              contribution?              @relation("contributionTocontribution", fields: [bouquet_donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E151AD1F991")
  other_contribution                                                        contribution[]             @relation("contributionTocontribution")
  profile_contribution_tpo_idToprofile                                      profile?                   @relation("contribution_tpo_idToprofile", fields: [tpo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E1522E6F5CC")
  tpo_donor_proxy_contribution_tpo_donor_proxy_idTotpo_donor_proxy          tpo_donor_proxy?           @relation("contribution_tpo_donor_proxy_idTotpo_donor_proxy", fields: [tpo_donor_proxy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E1525AF33F6")
  donation_receipt                                                          donation_receipt?          @relation(fields: [receipt_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E152B5CA896")
  treecounter_contribution_community_treecounter_idTotreecounter            treecounter?               @relation("contribution_community_treecounter_idTotreecounter", fields: [community_treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E1545A5C5DB")
  treecounter_contribution_gift_treecounter_idTotreecounter                 treecounter?               @relation("contribution_gift_treecounter_idTotreecounter", fields: [gift_treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E1546987EF4")
  treecounter_contribution_treecounter_idTotreecounter                      treecounter?               @relation("contribution_treecounter_idTotreecounter", fields: [treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E1576C637A1")
  project_plan                                                              project_plan?              @relation(fields: [project_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E157E870EFE")
  planet_cash_account                                                       planet_cash_account?       @relation(fields: [planet_cash_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E158D7D2B2")
  tenant                                                                    tenant?                    @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E159033212A")
  payment_account                                                           payment_account?           @relation(fields: [payment_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E15AE9DDE6F")
  treecounter_log                                                           treecounter_log?           @relation(fields: [treecounter_log_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E15C99D8592")
  payment_recurrency_contribution_payment_recurrency_idTopayment_recurrency payment_recurrency?        @relation("contribution_payment_recurrency_idTopayment_recurrency", fields: [payment_recurrency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E15CB8AAD02")
  profile_contribution_profile_idToprofile                                  profile?                   @relation("contribution_profile_idToprofile", fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E15CCFA12B8")
  fos_user_contribution_created_byTofos_user                                fos_user?                  @relation("contribution_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E15DE12AB56")
  plant_project                                                             plant_project?             @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E15E83C4879")
  tpo_donor_proxy_contribution_tpo_recipient_proxy_idTotpo_donor_proxy      tpo_donor_proxy?           @relation("contribution_tpo_recipient_proxy_idTotpo_donor_proxy", fields: [tpo_recipient_proxy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA351E15FD9C96B7")
  contribution_image                                                        contribution_image[]
  contribution_measurement                                                  contribution_measurement[]
  event_pledge                                                              event_pledge?
  financial_transaction                                                     financial_transaction[]
  gift_invitation                                                           gift_invitation?
  payment_recurrency_payment_recurrency_latest_donation_idTocontribution    payment_recurrency?        @relation("payment_recurrency_latest_donation_idTocontribution")
  payment_recurrency_payment_recurrency_first_donation_idTocontribution     payment_recurrency?        @relation("payment_recurrency_first_donation_idTocontribution")
  paypal_transaction                                                        paypal_transaction[]
  planet_cash_transaction                                                   planet_cash_transaction[]
  redeemable_redeemable_donation_contribution_idTocontribution              redeemable[]               @relation("redeemable_donation_contribution_idTocontribution")
  redeemable_redeemable_contribution_idTocontribution                       redeemable[]               @relation("redeemable_contribution_idTocontribution")
  sat1_sms_log                                                              sat1_sms_log?
  stripe_charge                                                             stripe_charge[]
  stripe_dispute                                                            stripe_dispute[]
  stripe_invoice                                                            stripe_invoice[]
  stripe_refund                                                             stripe_refund[]
  stripe_transaction                                                        stripe_transaction[]
  tink_transaction                                                          tink_transaction[]
  tree_allocation                                                           tree_allocation[]

  @@unique([planet_cash_account_id, idempotency_key], map: "planet_cash_idempotency")
  @@unique([tpo_id, remote_id], map: "unique_tpo_remoteId")
  @@index([updated_by], map: "IDX_EA351E1516FE72E1")
  @@index([bouquet_donation_id], map: "IDX_EA351E151AD1F991")
  @@index([tpo_id], map: "IDX_EA351E1522E6F5CC")
  @@index([tpo_donor_proxy_id], map: "IDX_EA351E1525AF33F6")
  @@index([receipt_id], map: "IDX_EA351E152B5CA896")
  @@index([community_treecounter_id], map: "IDX_EA351E1545A5C5DB")
  @@index([gift_treecounter_id], map: "IDX_EA351E1546987EF4")
  @@index([treecounter_id], map: "IDX_EA351E1576C637A1")
  @@index([project_plan_id], map: "IDX_EA351E157E870EFE")
  @@index([planet_cash_account_id], map: "IDX_EA351E158D7D2B2")
  @@index([tenant_id], map: "IDX_EA351E159033212A")
  @@index([payment_account_id], map: "IDX_EA351E15AE9DDE6F")
  @@index([treecounter_log_id], map: "IDX_EA351E15C99D8592")
  @@index([payment_recurrency_id], map: "IDX_EA351E15CB8AAD02")
  @@index([profile_id], map: "IDX_EA351E15CCFA12B8")
  @@index([created_by], map: "IDX_EA351E15DE12AB56")
  @@index([plant_project_id], map: "IDX_EA351E15E83C4879")
  @@index([tpo_recipient_proxy_id], map: "IDX_EA351E15FD9C96B7")
  @@index([remote_id], map: "remote_id_idx")
  @@index([remote_uid], map: "remote_uid_idx")
}

model contribution_image {
  id              Int           @id @default(autoincrement())
  contribution_id Int?
  image           String        @db.VarChar(255)
  description     String?       @db.LongText
  created         DateTime      @db.DateTime(0)
  updated         DateTime      @db.DateTime(0)
  deleted_at      DateTime?     @db.DateTime(0)
  updated_at      DateTime?     @db.DateTime(0)
  guid            String        @unique(map: "UNIQ_A04E0FED2B6FCFB2") @db.VarChar(32)
  contribution    contribution? @relation(fields: [contribution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A04E0FEDFE5E5FBD")

  @@index([contribution_id], map: "IDX_A04E0FEDFE5E5FBD")
}

model contribution_measurement {
  id               Int           @id @default(autoincrement())
  contribution_id  Int?
  diameter         Int
  height           Int
  measurement_date DateTime      @db.DateTime(0)
  created          DateTime      @db.DateTime(0)
  updated          DateTime      @db.DateTime(0)
  contribution     contribution? @relation(fields: [contribution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3BA45DC7FE5E5FBD")

  @@index([contribution_id], map: "IDX_3BA45DC7FE5E5FBD")
}

model country_currency {
  id                   Int                    @id @default(autoincrement())
  uid                  String                 @unique(map: "UNIQ_5A9CD982539B0606") @db.VarChar(10)
  country_name         String                 @db.VarChar(255)
  country_code_2       String                 @db.VarChar(2)
  country_code_3       String                 @db.VarChar(3)
  currency_code        String                 @db.VarChar(3)
  currency_symbol      String?                @db.VarChar(10)
  country_currency_tpo country_currency_tpo[]
}

model country_currency_tpo {
  country_currency_id Int
  tpo_id              Int
  profile             profile          @relation(fields: [tpo_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_80A208A822E6F5CC")
  country_currency    country_currency @relation(fields: [country_currency_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_80A208A82DB3ABBD")

  @@id([country_currency_id, tpo_id])
  @@index([tpo_id], map: "IDX_80A208A822E6F5CC")
  @@index([country_currency_id], map: "IDX_80A208A82DB3ABBD")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model coupon_data {
  code            String    @db.VarChar(10)
  owned_by_id     Int?
  weight          Float
  redemption_date DateTime? @db.DateTime(0)

  @@ignore
}

model currency {
  id                                     Int       @id @default(autoincrement())
  created_by                             Int?
  updated_by                             Int?
  currency_code                          String    @unique(map: "UNIQ_6956883FFDA273EC") @db.VarChar(3)
  is_active                              Boolean
  created                                DateTime  @db.DateTime(0)
  updated                                DateTime  @db.DateTime(0)
  deleted_at                             DateTime? @db.DateTime(0)
  fos_user_currency_updated_byTofos_user fos_user? @relation("currency_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_6956883F16FE72E1")
  fos_user_currency_created_byTofos_user fos_user? @relation("currency_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_6956883FDE12AB56")

  @@index([updated_by], map: "IDX_6956883F16FE72E1")
  @@index([created_by], map: "IDX_6956883FDE12AB56")
}

model currency_update {
  id                                            Int                    @id @default(autoincrement())
  exchange_rate_request_id                      Int?                   @unique(map: "UNIQ_3CA31317E5F7F80E")
  created_by                                    Int?
  updated_by                                    Int?
  currency_code                                 String                 @unique(map: "UNIQ_3CA31317FDA273EC") @db.VarChar(3)
  last_modified                                 Int?
  last_fetched                                  Int?
  date                                          DateTime?              @db.DateTime(0)
  created                                       DateTime               @db.DateTime(0)
  updated                                       DateTime               @db.DateTime(0)
  deleted_at                                    DateTime?              @db.DateTime(0)
  fos_user_currency_update_updated_byTofos_user fos_user?              @relation("currency_update_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3CA3131716FE72E1")
  fos_user_currency_update_created_byTofos_user fos_user?              @relation("currency_update_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3CA31317DE12AB56")
  exchange_rate_request                         exchange_rate_request? @relation(fields: [exchange_rate_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3CA31317E5F7F80E")

  @@index([updated_by], map: "IDX_3CA3131716FE72E1")
  @@index([created_by], map: "IDX_3CA31317DE12AB56")
}

model donation_receipt {
  id                                             Int            @id @default(autoincrement())
  created_by                                     Int?
  updated_by                                     Int?
  companyname                                    String?        @db.VarChar(255)
  firstname                                      String?        @db.VarChar(50)
  lastname                                       String?        @db.VarChar(50)
  email                                          String?        @db.VarChar(50)
  address1                                       String?        @db.VarChar(255)
  zip_code                                       String?        @db.VarChar(15)
  city                                           String?        @db.VarChar(255)
  country_code                                   String?        @db.VarChar(2)
  created                                        DateTime       @db.DateTime(0)
  updated                                        DateTime       @db.DateTime(0)
  deleted_at                                     DateTime?      @db.DateTime(0)
  tin                                            String?        @db.VarChar(64)
  msisdn                                         String?        @db.VarChar(32)
  contribution                                   contribution[]
  fos_user_donation_receipt_updated_byTofos_user fos_user?      @relation("donation_receipt_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_79354AF516FE72E1")
  fos_user_donation_receipt_created_byTofos_user fos_user?      @relation("donation_receipt_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_79354AF5DE12AB56")

  @@index([updated_by], map: "IDX_79354AF516FE72E1")
  @@index([created_by], map: "IDX_79354AF5DE12AB56")
}

model email_log {
  id           Int      @id @default(autoincrement())
  context      String   @db.VarChar(255)
  object_class String   @db.VarChar(255)
  object_id    Int?
  subject      String?  @db.LongText
  email_from   String?  @db.VarChar(255)
  email_to     String   @db.VarChar(255)
  email_body   String?  @db.LongText
  status       String   @db.VarChar(20)
  retries      Int
  created      DateTime @db.DateTime(0)
  updated      DateTime @db.DateTime(0)
  reference    String?  @db.VarChar(255)
  parameters   String?  @db.LongText
  locale       String?  @db.VarChar(10)
  tenant_guid  String?  @db.VarChar(32)

  @@index([object_class, object_id], map: "email_object")
  @@index([email_to], map: "email_to_idx")
  @@index([status], map: "status_idx")
}

model event_pledge {
  id                                         Int           @id @default(autoincrement())
  pledge_event_id                            Int
  created_by                                 Int?
  updated_by                                 Int?
  token                                      String        @unique(map: "UNIQ_80F94D065F37A13B") @db.VarChar(32)
  firstname                                  String        @db.VarChar(255)
  lastname                                   String        @db.VarChar(255)
  email                                      String        @db.VarChar(255)
  tree_count                                 Int
  created                                    DateTime      @db.DateTime(0)
  updated                                    DateTime      @db.DateTime(0)
  updated_at                                 DateTime?     @db.DateTime(0)
  deleted_at                                 DateTime?     @db.DateTime(0)
  donation_contribution_id                   Int?          @unique(map: "UNIQ_80F94D066ED93F87")
  status                                     String        @db.VarChar(20)
  last_reminded                              DateTime?     @db.DateTime(0)
  comment                                    String?       @db.LongText
  is_anonymous                               Boolean
  user_profile_id                            Int?
  last_incremented                           DateTime?     @db.DateTime(0)
  fos_user_event_pledge_updated_byTofos_user fos_user?     @relation("event_pledge_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_80F94D0616FE72E1")
  profile                                    profile?      @relation(fields: [user_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_80F94D066B9DD454")
  contribution                               contribution? @relation(fields: [donation_contribution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_80F94D066ED93F87")
  pledge_event                               pledge_event  @relation(fields: [pledge_event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_80F94D06B8300CBF")
  fos_user_event_pledge_created_byTofos_user fos_user?     @relation("event_pledge_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_80F94D06DE12AB56")

  @@index([updated_by], map: "IDX_80F94D0616FE72E1")
  @@index([user_profile_id], map: "IDX_80F94D066B9DD454")
  @@index([pledge_event_id], map: "IDX_80F94D06B8300CBF")
  @@index([created_by], map: "IDX_80F94D06DE12AB56")
}

model exchange_rate {
  id                       Int                   @id @default(autoincrement())
  exchange_rate_request_id Int
  currency_code            String                @db.VarChar(3)
  value                    Decimal               @db.Decimal(14, 6)
  created                  DateTime              @db.DateTime(0)
  exchange_rate_request    exchange_rate_request @relation(fields: [exchange_rate_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_E9521FABE5F7F80E")

  @@index([exchange_rate_request_id], map: "IDX_E9521FABE5F7F80E")
}

model exchange_rate_request {
  id              Int              @id @default(autoincrement())
  currency_code   String           @db.VarChar(3)
  timestamp       Int?
  date            DateTime?        @db.DateTime(0)
  created         DateTime         @db.DateTime(0)
  currency_update currency_update?
  exchange_rate   exchange_rate[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ext_log_entries {
  id           Int      @id @default(autoincrement())
  action       String   @db.VarChar(8)
  logged_at    DateTime @db.DateTime(0)
  object_id    String?  @db.VarChar(64)
  object_class String
  version      Int
  data         String?  @db.LongText
  username     String?

  @@index([object_class], map: "log_class_lookup_idx")
  @@index([logged_at], map: "log_date_lookup_idx")
  @@index([username], map: "log_user_lookup_idx")
  @@index([object_id, object_class, version], map: "log_version_lookup_idx")
}

model ext_translations {
  id           Int     @id @default(autoincrement())
  locale       String  @db.VarChar(8)
  object_class String
  field        String  @db.VarChar(32)
  foreign_key  String  @db.VarChar(64)
  content      String? @db.LongText

  @@unique([locale, object_class, field, foreign_key], map: "lookup_unique_idx")
  @@index([locale, object_class, foreign_key], map: "translations_lookup_idx")
}

model faq {
  id                                Int       @id @default(autoincrement())
  created_by                        Int?
  updated_by                        Int?
  question                          String?   @db.LongText
  answer                            String?   @db.LongText
  slug                              String?   @db.VarChar(255)
  position                          Int
  created                           DateTime  @db.DateTime(0)
  updated                           DateTime  @db.DateTime(0)
  deleted_at                        DateTime? @db.DateTime(0)
  fos_user_faq_updated_byTofos_user fos_user? @relation("faq_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_E8FF75CC16FE72E1")
  fos_user_faq_created_byTofos_user fos_user? @relation("faq_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_E8FF75CCDE12AB56")

  @@index([updated_by], map: "IDX_E8FF75CC16FE72E1")
  @@index([created_by], map: "IDX_E8FF75CCDE12AB56")
}

model favorite {
  id              Int       @id @default(autoincrement())
  user_profile_id Int
  title           String    @db.VarChar(255)
  category        String    @db.VarChar(255)
  uri             String    @db.VarChar(255)
  created         DateTime? @db.DateTime(0)
  profile         profile   @relation(fields: [user_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_68C58ED96B9DD454")

  @@index([user_profile_id], map: "IDX_68C58ED96B9DD454")
}

model financial_transaction {
  id                    Int              @id @default(autoincrement())
  donation_id           Int?
  payment_account_id    Int?
  platform_payout_id    Int?
  created_by            Int?
  type                  String           @db.VarChar(32)
  exchange_rate         Decimal          @db.Decimal(14, 8)
  source_currency       String           @db.VarChar(3)
  target_currency       String           @db.VarChar(3)
  source_amount         Int
  target_amount         Int
  source_fee            Int
  target_fee            Int
  operation_date        DateTime         @db.DateTime(0)
  purpose               String           @db.VarChar(32)
  provider              String           @db.VarChar(32)
  origin_class          String?          @db.VarChar(255)
  origin_id             Int?
  destination_class     String?          @db.VarChar(255)
  destination_id        Int?
  provider_reference    String           @db.VarChar(255)
  provider_payout_class String?          @db.VarChar(255)
  provider_payout_id    Int?
  is_consolidated       Boolean
  is_paid_out           Boolean
  created               DateTime         @db.DateTime(0)
  project_id            Int?
  prevent_payout        Boolean
  payout_note           String?          @db.LongText
  plant_project         plant_project?   @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3000FF4D166D1F9C")
  platform_payout       platform_payout? @relation(fields: [platform_payout_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3000FF4D35EA1A37")
  contribution          contribution?    @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3000FF4D4DC1279C")
  payment_account       payment_account? @relation(fields: [payment_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3000FF4DAE9DDE6F")
  fos_user              fos_user?        @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3000FF4DDE12AB56")

  @@unique([provider, provider_reference], map: "unique_provider_reference")
  @@index([project_id], map: "IDX_3000FF4D166D1F9C")
  @@index([platform_payout_id], map: "IDX_3000FF4D35EA1A37")
  @@index([donation_id], map: "IDX_3000FF4D4DC1279C")
  @@index([payment_account_id], map: "IDX_3000FF4DAE9DDE6F")
  @@index([created_by], map: "IDX_3000FF4DDE12AB56")
}

model follow {
  id                                          Int          @id @default(autoincrement())
  followee_id                                 Int?
  follower_id                                 Int?
  un_subscribed                               DateTime?    @db.DateTime(0)
  created                                     DateTime     @db.DateTime(0)
  updated                                     DateTime     @db.DateTime(0)
  treecounter_follow_followee_idTotreecounter treecounter? @relation("follow_followee_idTotreecounter", fields: [followee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_6834447061EA9775")
  treecounter_follow_follower_idTotreecounter treecounter? @relation("follow_follower_idTotreecounter", fields: [follower_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_68344470AC24F853")

  @@unique([followee_id, follower_id], map: "unique_follower")
  @@index([followee_id], map: "IDX_6834447061EA9775")
  @@index([follower_id], map: "IDX_68344470AC24F853")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fos_user {
  id                                                                         Int                          @id @default(autoincrement())
  username                                                                   String                       @unique(map: "UNIQ_957A6479F85E0677") @db.VarChar(180)
  username_canonical                                                         String                       @unique(map: "UNIQ_957A647992FC23A8") @db.VarChar(180)
  email                                                                      String                       @unique(map: "UNIQ_957A6479E7927C74") @db.VarChar(180)
  email_canonical                                                            String                       @unique(map: "UNIQ_957A6479A0D96FBF") @db.VarChar(180)
  enabled                                                                    Boolean
  salt                                                                       String?                      @db.VarChar(255)
  password                                                                   String                       @db.VarChar(255)
  last_login                                                                 DateTime?                    @db.DateTime(0)
  confirmation_token                                                         String?                      @unique(map: "UNIQ_957A6479C05FB297") @db.VarChar(180)
  password_requested_at                                                      DateTime?                    @db.DateTime(0)
  roles                                                                      String                       @db.LongText
  api_key                                                                    String?                      @unique(map: "UNIQ_957A6479C912ED9D") @db.VarChar(255)
  last_session_id                                                            String?                      @db.VarChar(255)
  auth0_sub                                                                  String?                      @db.VarChar(255)
  session_id                                                                 String?                      @db.VarChar(255)
  bank_account_bank_account_updated_byTofos_user                             bank_account[]               @relation("bank_account_updated_byTofos_user")
  bank_account_bank_account_created_byTofos_user                             bank_account[]               @relation("bank_account_created_byTofos_user")
  bank_transaction_bank_transaction_updated_byTofos_user                     bank_transaction[]           @relation("bank_transaction_updated_byTofos_user")
  bank_transaction_bank_transaction_created_byTofos_user                     bank_transaction[]           @relation("bank_transaction_created_byTofos_user")
  bouquet_plan_option_bouquet_plan_option_updated_byTofos_user               bouquet_plan_option[]        @relation("bouquet_plan_option_updated_byTofos_user")
  bouquet_plan_option_bouquet_plan_option_created_byTofos_user               bouquet_plan_option[]        @relation("bouquet_plan_option_created_byTofos_user")
  bouquet_project_option_bouquet_project_option_updated_byTofos_user         bouquet_project_option[]     @relation("bouquet_project_option_updated_byTofos_user")
  bouquet_project_option_bouquet_project_option_created_byTofos_user         bouquet_project_option[]     @relation("bouquet_project_option_created_byTofos_user")
  competition_competition_updated_byTofos_user                               competition[]                @relation("competition_updated_byTofos_user")
  competition_competition_created_byTofos_user                               competition[]                @relation("competition_created_byTofos_user")
  competition_enrollment_competition_enrollment_updated_byTofos_user         competition_enrollment[]     @relation("competition_enrollment_updated_byTofos_user")
  competition_enrollment_competition_enrollment_created_byTofos_user         competition_enrollment[]     @relation("competition_enrollment_created_byTofos_user")
  contribution_contribution_updated_byTofos_user                             contribution[]               @relation("contribution_updated_byTofos_user")
  contribution_contribution_created_byTofos_user                             contribution[]               @relation("contribution_created_byTofos_user")
  currency_currency_updated_byTofos_user                                     currency[]                   @relation("currency_updated_byTofos_user")
  currency_currency_created_byTofos_user                                     currency[]                   @relation("currency_created_byTofos_user")
  currency_update_currency_update_updated_byTofos_user                       currency_update[]            @relation("currency_update_updated_byTofos_user")
  currency_update_currency_update_created_byTofos_user                       currency_update[]            @relation("currency_update_created_byTofos_user")
  donation_receipt_donation_receipt_updated_byTofos_user                     donation_receipt[]           @relation("donation_receipt_updated_byTofos_user")
  donation_receipt_donation_receipt_created_byTofos_user                     donation_receipt[]           @relation("donation_receipt_created_byTofos_user")
  event_pledge_event_pledge_updated_byTofos_user                             event_pledge[]               @relation("event_pledge_updated_byTofos_user")
  event_pledge_event_pledge_created_byTofos_user                             event_pledge[]               @relation("event_pledge_created_byTofos_user")
  faq_faq_updated_byTofos_user                                               faq[]                        @relation("faq_updated_byTofos_user")
  faq_faq_created_byTofos_user                                               faq[]                        @relation("faq_created_byTofos_user")
  financial_transaction                                                      financial_transaction[]
  imprint_imprint_updated_byTofos_user                                       imprint[]                    @relation("imprint_updated_byTofos_user")
  imprint_imprint_created_byTofos_user                                       imprint[]                    @relation("imprint_created_byTofos_user")
  menu_group_menu_group_updated_byTofos_user                                 menu_group[]                 @relation("menu_group_updated_byTofos_user")
  menu_group_menu_group_created_byTofos_user                                 menu_group[]                 @relation("menu_group_created_byTofos_user")
  menu_item_menu_item_updated_byTofos_user                                   menu_item[]                  @relation("menu_item_updated_byTofos_user")
  menu_item_menu_item_created_byTofos_user                                   menu_item[]                  @relation("menu_item_created_byTofos_user")
  nordigen_account_nordigen_account_updated_byTofos_user                     nordigen_account[]           @relation("nordigen_account_updated_byTofos_user")
  nordigen_account_nordigen_account_created_byTofos_user                     nordigen_account[]           @relation("nordigen_account_created_byTofos_user")
  nordigen_requisition_nordigen_requisition_updated_byTofos_user             nordigen_requisition[]       @relation("nordigen_requisition_updated_byTofos_user")
  nordigen_requisition_nordigen_requisition_created_byTofos_user             nordigen_requisition[]       @relation("nordigen_requisition_created_byTofos_user")
  payment_account_payment_account_updated_byTofos_user                       payment_account[]            @relation("payment_account_updated_byTofos_user")
  payment_account_payment_account_created_byTofos_user                       payment_account[]            @relation("payment_account_created_byTofos_user")
  payment_country_payment_country_updated_byTofos_user                       payment_country[]            @relation("payment_country_updated_byTofos_user")
  payment_country_payment_country_created_byTofos_user                       payment_country[]            @relation("payment_country_created_byTofos_user")
  payment_option_payment_option_updated_byTofos_user                         payment_option[]             @relation("payment_option_updated_byTofos_user")
  payment_option_payment_option_created_byTofos_user                         payment_option[]             @relation("payment_option_created_byTofos_user")
  payment_recurrency_payment_recurrency_updated_byTofos_user                 payment_recurrency[]         @relation("payment_recurrency_updated_byTofos_user")
  payment_recurrency_payment_recurrency_created_byTofos_user                 payment_recurrency[]         @relation("payment_recurrency_created_byTofos_user")
  paypal_payout_paypal_payout_updated_byTofos_user                           paypal_payout[]              @relation("paypal_payout_updated_byTofos_user")
  paypal_payout_paypal_payout_created_byTofos_user                           paypal_payout[]              @relation("paypal_payout_created_byTofos_user")
  planet_cash_account_planet_cash_account_updated_byTofos_user               planet_cash_account[]        @relation("planet_cash_account_updated_byTofos_user")
  planet_cash_account_planet_cash_account_created_byTofos_user               planet_cash_account[]        @relation("planet_cash_account_created_byTofos_user")
  planet_cash_transaction_planet_cash_transaction_updated_byTofos_user       planet_cash_transaction[]    @relation("planet_cash_transaction_updated_byTofos_user")
  planet_cash_transaction_planet_cash_transaction_created_byTofos_user       planet_cash_transaction[]    @relation("planet_cash_transaction_created_byTofos_user")
  plant_location_plant_location_updated_byTofos_user                         plant_location[]             @relation("plant_location_updated_byTofos_user")
  plant_location_plant_location_created_byTofos_user                         plant_location[]             @relation("plant_location_created_byTofos_user")
  plant_location_coordinate_plant_location_coordinate_updated_byTofos_user   plant_location_coordinate[]  @relation("plant_location_coordinate_updated_byTofos_user")
  plant_location_coordinate_plant_location_coordinate_created_byTofos_user   plant_location_coordinate[]  @relation("plant_location_coordinate_created_byTofos_user")
  plant_location_history                                                     plant_location_history[]
  plant_project_plant_project_updated_byTofos_user                           plant_project[]              @relation("plant_project_updated_byTofos_user")
  plant_project_plant_project_created_byTofos_user                           plant_project[]              @relation("plant_project_created_byTofos_user")
  plant_project_site_plant_project_site_updated_byTofos_user                 plant_project_site[]         @relation("plant_project_site_updated_byTofos_user")
  plant_project_site_plant_project_site_created_byTofos_user                 plant_project_site[]         @relation("plant_project_site_created_byTofos_user")
  planted_species_planted_species_updated_byTofos_user                       planted_species[]            @relation("planted_species_updated_byTofos_user")
  planted_species_planted_species_created_byTofos_user                       planted_species[]            @relation("planted_species_created_byTofos_user")
  platform_payout_platform_payout_updated_byTofos_user                       platform_payout[]            @relation("platform_payout_updated_byTofos_user")
  platform_payout_platform_payout_created_byTofos_user                       platform_payout[]            @relation("platform_payout_created_byTofos_user")
  pledge_event_pledge_event_updated_byTofos_user                             pledge_event[]               @relation("pledge_event_updated_byTofos_user")
  pledge_event_pledge_event_created_byTofos_user                             pledge_event[]               @relation("pledge_event_created_byTofos_user")
  privacy_privacy_updated_byTofos_user                                       privacy[]                    @relation("privacy_updated_byTofos_user")
  privacy_privacy_created_byTofos_user                                       privacy[]                    @relation("privacy_created_byTofos_user")
  profile_profile_updated_byTofos_user                                       profile[]                    @relation("profile_updated_byTofos_user")
  profile_profile_user_idTofos_user                                          profile[]                    @relation("profile_user_idTofos_user")
  profile_profile_created_byTofos_user                                       profile[]                    @relation("profile_created_byTofos_user")
  project_plan_project_plan_updated_byTofos_user                             project_plan[]               @relation("project_plan_updated_byTofos_user")
  project_plan_project_plan_created_byTofos_user                             project_plan[]               @relation("project_plan_created_byTofos_user")
  recurrency_stencil_recurrency_stencil_updated_byTofos_user                 recurrency_stencil[]         @relation("recurrency_stencil_updated_byTofos_user")
  recurrency_stencil_recurrency_stencil_created_byTofos_user                 recurrency_stencil[]         @relation("recurrency_stencil_created_byTofos_user")
  redeemable_redeemable_updated_byTofos_user                                 redeemable[]                 @relation("redeemable_updated_byTofos_user")
  redeemable_redeemable_created_byTofos_user                                 redeemable[]                 @relation("redeemable_created_byTofos_user")
  registered_tree_donation_registered_tree_donation_updated_byTofos_user     registered_tree_donation[]   @relation("registered_tree_donation_updated_byTofos_user")
  registered_tree_donation_registered_tree_donation_created_byTofos_user     registered_tree_donation[]   @relation("registered_tree_donation_created_byTofos_user")
  request_log                                                                request_log[]
  review_review_updated_byTofos_user                                         review[]                     @relation("review_updated_byTofos_user")
  review_review_created_byTofos_user                                         review[]                     @relation("review_created_byTofos_user")
  review_index_review_index_updated_byTofos_user                             review_index[]               @relation("review_index_updated_byTofos_user")
  review_index_review_index_created_byTofos_user                             review_index[]               @relation("review_index_created_byTofos_user")
  reviewer_reviewer_updated_byTofos_user                                     reviewer[]                   @relation("reviewer_updated_byTofos_user")
  reviewer_reviewer_created_byTofos_user                                     reviewer[]                   @relation("reviewer_created_byTofos_user")
  scientific_species_scientific_species_updated_byTofos_user                 scientific_species[]         @relation("scientific_species_updated_byTofos_user")
  scientific_species_scientific_species_created_byTofos_user                 scientific_species[]         @relation("scientific_species_created_byTofos_user")
  species_species_updated_byTofos_user                                       species[]                    @relation("species_updated_byTofos_user")
  species_species_created_byTofos_user                                       species[]                    @relation("species_created_byTofos_user")
  target_log                                                                 target_log[]
  tenant_tenant_updated_byTofos_user                                         tenant[]                     @relation("tenant_updated_byTofos_user")
  tenant_tenant_created_byTofos_user                                         tenant[]                     @relation("tenant_created_byTofos_user")
  tink_account_tink_account_updated_byTofos_user                             tink_account[]               @relation("tink_account_updated_byTofos_user")
  tink_account_tink_account_created_byTofos_user                             tink_account[]               @relation("tink_account_created_byTofos_user")
  tink_transaction_tink_transaction_updated_byTofos_user                     tink_transaction[]           @relation("tink_transaction_updated_byTofos_user")
  tink_transaction_tink_transaction_created_byTofos_user                     tink_transaction[]           @relation("tink_transaction_created_byTofos_user")
  tpo_donor_proxy_tpo_donor_proxy_updated_byTofos_user                       tpo_donor_proxy[]            @relation("tpo_donor_proxy_updated_byTofos_user")
  tpo_donor_proxy_tpo_donor_proxy_created_byTofos_user                       tpo_donor_proxy[]            @relation("tpo_donor_proxy_created_byTofos_user")
  tree_allocation_tree_allocation_updated_byTofos_user                       tree_allocation[]            @relation("tree_allocation_updated_byTofos_user")
  tree_allocation_tree_allocation_created_byTofos_user                       tree_allocation[]            @relation("tree_allocation_created_byTofos_user")
  treecode_bulk_treecode_bulk_updated_byTofos_user                           treecode_bulk[]              @relation("treecode_bulk_updated_byTofos_user")
  treecode_bulk_treecode_bulk_created_byTofos_user                           treecode_bulk[]              @relation("treecode_bulk_created_byTofos_user")
  treecode_number_block_treecode_number_block_updated_byTofos_user           treecode_number_block[]      @relation("treecode_number_block_updated_byTofos_user")
  treecode_number_block_treecode_number_block_created_byTofos_user           treecode_number_block[]      @relation("treecode_number_block_created_byTofos_user")
  treemapper_profile_project_treemapper_profile_project_updated_byTofos_user treemapper_profile_project[] @relation("treemapper_profile_project_updated_byTofos_user")
  treemapper_profile_project_treemapper_profile_project_created_byTofos_user treemapper_profile_project[] @relation("treemapper_profile_project_created_byTofos_user")
  userfeed_userfeed_updated_byTofos_user                                     userfeed[]                   @relation("userfeed_updated_byTofos_user")
  userfeed_userfeed_created_byTofos_user                                     userfeed[]                   @relation("userfeed_created_byTofos_user")
}

model gift_invitation {
  id                       Int          @id @default(autoincrement())
  donation_contribution_id Int          @unique(map: "UNIQ_5CECA6496ED93F87")
  gift_treecounter_id      Int?
  email                    String       @db.VarChar(50)
  firstname                String       @db.VarChar(50)
  lastname                 String       @db.VarChar(50)
  token                    String       @db.VarChar(255)
  is_redeemed              Int          @db.SmallInt
  created                  DateTime     @db.DateTime(0)
  updated                  DateTime     @db.DateTime(0)
  deleted_at               DateTime?    @db.DateTime(0)
  treecounter              treecounter? @relation(fields: [gift_treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5CECA64946987EF4")
  contribution             contribution @relation(fields: [donation_contribution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5CECA6496ED93F87")

  @@index([gift_treecounter_id], map: "IDX_5CECA64946987EF4")
}

model imprint {
  id                                    Int       @id @default(autoincrement())
  created_by                            Int?
  updated_by                            Int?
  title                                 String?   @db.VarChar(255)
  description                           String?   @db.LongText
  position                              Int?
  created                               DateTime  @db.DateTime(0)
  updated                               DateTime  @db.DateTime(0)
  deleted_at                            DateTime? @db.DateTime(0)
  slug                                  String?   @db.VarChar(255)
  fos_user_imprint_updated_byTofos_user fos_user? @relation("imprint_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_E4DC41B716FE72E1")
  fos_user_imprint_created_byTofos_user fos_user? @relation("imprint_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_E4DC41B7DE12AB56")

  @@index([updated_by], map: "IDX_E4DC41B716FE72E1")
  @@index([created_by], map: "IDX_E4DC41B7DE12AB56")
}

model issuer {
  id                  Int       @id @default(autoincrement())
  created_by          Int?
  updated_by          Int?
  guid                String    @db.VarChar(32)
  name                String    @db.VarChar(255)
  registration_number String?   @db.VarChar(50)
  country             String    @db.VarChar(3)
  signature           String?   @db.VarChar(255)
  signatory           String    @db.VarChar(255)
  address1            String    @db.VarChar(255)
  address2            String?   @db.VarChar(255)
  city                String    @db.VarChar(255)
  zip_code            String    @db.VarChar(20)
  time_zone           String    @db.VarChar(255)
  live_mode           Boolean
  created             DateTime  @db.DateTime(0)
  updated             DateTime  @db.DateTime(0)
  deleted_at          DateTime? @db.DateTime(0)
  requires_tin        Boolean
  currency            String    @db.VarChar(3)
  receipt             receipt[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model lexik_email {
  id                      Int                       @id @default(autoincrement())
  layout_id               Int?
  reference               String                    @unique(map: "UNIQ_D781892EAEA34913") @db.VarChar(255)
  description             String?                   @db.VarChar(255)
  bcc                     String?                   @db.VarChar(255)
  spool                   Boolean
  headers                 String?                   @db.LongText
  use_fallback_locale     Boolean?
  lexik_layout            lexik_layout?             @relation(fields: [layout_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_D781892E8C22AA1A")
  lexik_email_translation lexik_email_translation[]

  @@index([layout_id], map: "IDX_D781892E8C22AA1A")
}

model lexik_email_translation {
  id           Int          @id @default(autoincrement())
  email_id     Int?
  lang         String       @db.VarChar(5)
  subject      String       @db.VarChar(255)
  body         String       @db.LongText
  body_text    String?      @db.LongText
  from_address String?      @db.VarChar(255)
  from_name    String?      @db.VarChar(255)
  created_at   DateTime?    @db.DateTime(0)
  updated_at   DateTime?    @db.DateTime(0)
  lexik_email  lexik_email? @relation(fields: [email_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6ED9BAA2A832C1C9")

  @@index([email_id], map: "IDX_6ED9BAA2A832C1C9")
}

model lexik_layout {
  id                       Int                        @id @default(autoincrement())
  reference                String                     @unique(map: "UNIQ_B1B4C0FDAEA34913") @db.VarChar(255)
  description              String?                    @db.VarChar(255)
  default_locale           String?                    @db.VarChar(255)
  lexik_email              lexik_email[]
  lexik_layout_translation lexik_layout_translation[]
}

model lexik_layout_translation {
  id           Int           @id @default(autoincrement())
  layout_id    Int?
  lang         String        @db.VarChar(5)
  body         String        @db.LongText
  created_at   DateTime?     @db.DateTime(0)
  updated_at   DateTime?     @db.DateTime(0)
  lexik_layout lexik_layout? @relation(fields: [layout_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_495DCB868C22AA1A")

  @@index([layout_id], map: "IDX_495DCB868C22AA1A")
}

model login {
  id              Int      @id @default(autoincrement())
  session_id      String   @db.VarChar(255)
  route_name      String   @db.VarChar(255)
  user_profile_id Int
  created         DateTime @db.DateTime(0)
}

model menu_group {
  id                                       Int         @id @default(autoincrement())
  created_by                               Int?
  updated_by                               Int?
  caption                                  String      @db.VarChar(255)
  help                                     String?     @db.LongText
  sequence                                 Int
  icon                                     String?     @db.VarChar(255)
  roles                                    String?     @db.VarChar(255)
  is_active                                Boolean
  created                                  DateTime    @db.DateTime(0)
  updated                                  DateTime    @db.DateTime(0)
  deleted_at                               DateTime?   @db.DateTime(0)
  category                                 String      @db.VarChar(255)
  slug                                     String      @db.VarChar(255)
  min_version                              Int?
  max_version                              Int?
  fos_user_menu_group_updated_byTofos_user fos_user?   @relation("menu_group_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FC6C67A216FE72E1")
  fos_user_menu_group_created_byTofos_user fos_user?   @relation("menu_group_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FC6C67A2DE12AB56")
  menu_item                                menu_item[]

  @@index([updated_by], map: "IDX_FC6C67A216FE72E1")
  @@index([created_by], map: "IDX_FC6C67A2DE12AB56")
}

model menu_item {
  id                                      Int        @id @default(autoincrement())
  menu_group_id                           Int
  created_by                              Int?
  updated_by                              Int?
  caption                                 String     @db.VarChar(255)
  help                                    String?    @db.LongText
  icon                                    String     @db.VarChar(255)
  route                                   String?    @db.VarChar(255)
  uri                                     String?    @db.VarChar(255)
  sequence                                Int
  roles                                   String?    @db.VarChar(255)
  is_active                               Boolean
  created                                 DateTime   @db.DateTime(0)
  updated                                 DateTime   @db.DateTime(0)
  deleted_at                              DateTime?  @db.DateTime(0)
  slug                                    String?    @db.VarChar(255)
  min_version                             Int?
  max_version                             Int?
  fos_user_menu_item_updated_byTofos_user fos_user?  @relation("menu_item_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_D754D55016FE72E1")
  menu_group                              menu_group @relation(fields: [menu_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_D754D550D2059CD1")
  fos_user_menu_item_created_byTofos_user fos_user?  @relation("menu_item_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_D754D550DE12AB56")

  @@index([updated_by], map: "IDX_D754D55016FE72E1")
  @@index([menu_group_id], map: "IDX_D754D550D2059CD1")
  @@index([created_by], map: "IDX_D754D550DE12AB56")
}

model messenger_messages {
  id           BigInt    @id @default(autoincrement())
  body         String    @db.LongText
  headers      String    @db.LongText
  queue_name   String    @db.VarChar(190)
  created_at   DateTime  @db.DateTime(0)
  available_at DateTime  @db.DateTime(0)
  delivered_at DateTime? @db.DateTime(0)

  @@index([delivered_at], map: "IDX_75EA56E016BA31DB")
  @@index([available_at], map: "IDX_75EA56E0E3BD61CE")
  @@index([queue_name], map: "IDX_75EA56E0FB7336F0")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model migration_versions {
  version     String    @id @db.VarChar(14)
  executed_at DateTime? @db.DateTime(0)
}

model nace {
  id               Int     @id @default(autoincrement())
  parent_id        Int?
  lft              Int
  lvl              Int
  rgt              Int
  root             Int?
  is_active        Boolean
  code             String  @db.VarChar(20)
  level            Int
  en_description   String? @db.LongText
  en_definition    String? @db.LongText
  en_includes      String? @db.LongText
  en_includes_also String? @db.LongText
  en_excludes      String? @db.LongText
  da_description   String? @db.LongText
  da_definition    String? @db.LongText
  da_includes      String? @db.LongText
  da_includes_also String? @db.LongText
  da_excludes      String? @db.LongText
  de_description   String? @db.LongText
  de_definition    String? @db.LongText
  de_includes      String? @db.LongText
  de_includes_also String? @db.LongText
  de_excludes      String? @db.LongText
  el_description   String? @db.LongText
  el_definition    String? @db.LongText
  el_includes      String? @db.LongText
  el_includes_also String? @db.LongText
  el_excludes      String? @db.LongText
  es_description   String? @db.LongText
  es_definition    String? @db.LongText
  es_includes      String? @db.LongText
  es_includes_also String? @db.LongText
  es_excludes      String? @db.LongText
  fi_description   String? @db.LongText
  fi_definition    String? @db.LongText
  fi_includes      String? @db.LongText
  fi_includes_also String? @db.LongText
  fi_excludes      String? @db.LongText
  fr_description   String? @db.LongText
  fr_definition    String? @db.LongText
  fr_includes      String? @db.LongText
  fr_includes_also String? @db.LongText
  fr_excludes      String? @db.LongText
  it_description   String? @db.LongText
  it_definition    String? @db.LongText
  it_includes      String? @db.LongText
  it_includes_also String? @db.LongText
  it_excludes      String? @db.LongText
  nl_description   String? @db.LongText
  nl_definition    String? @db.LongText
  nl_includes      String? @db.LongText
  nl_includes_also String? @db.LongText
  nl_excludes      String? @db.LongText
  pt_description   String? @db.LongText
  pt_definition    String? @db.LongText
  pt_includes      String? @db.LongText
  pt_includes_also String? @db.LongText
  pt_excludes      String? @db.LongText
  sv_description   String? @db.LongText
  sv_definition    String? @db.LongText
  sv_includes      String? @db.LongText
  sv_includes_also String? @db.LongText
  sv_excludes      String? @db.LongText
  isic_reference   String? @db.VarChar(20)
  nace             nace?   @relation("naceTonace", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_C0A05388727ACA70")
  other_nace       nace[]  @relation("naceTonace")

  @@index([parent_id], map: "IDX_C0A05388727ACA70")
}

model nordigen_account {
  id                                             Int                  @id @default(autoincrement())
  requisition_id                                 Int
  created_by                                     Int?
  updated_by                                     Int?
  uuid                                           String               @db.VarChar(64)
  iban                                           String               @db.VarChar(32)
  institution_id                                 String               @db.VarChar(255)
  status                                         String?              @db.VarChar(64)
  is_active                                      Boolean
  description                                    String?              @db.LongText
  details                                        Json?
  last_accessed                                  DateTime?            @db.DateTime(0)
  created                                        DateTime             @db.DateTime(0)
  updated                                        DateTime             @db.DateTime(0)
  bank_transaction                               bank_transaction[]
  fos_user_nordigen_account_updated_byTofos_user fos_user?            @relation("nordigen_account_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_25A259B716FE72E1")
  nordigen_requisition                           nordigen_requisition @relation(fields: [requisition_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_25A259B7BCC3E956")
  fos_user_nordigen_account_created_byTofos_user fos_user?            @relation("nordigen_account_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_25A259B7DE12AB56")

  @@index([updated_by], map: "IDX_25A259B716FE72E1")
  @@index([requisition_id], map: "IDX_25A259B7BCC3E956")
  @@index([created_by], map: "IDX_25A259B7DE12AB56")
}

model nordigen_requisition {
  id                                                 Int                @id @default(autoincrement())
  created_by                                         Int?
  updated_by                                         Int?
  uuid                                               String             @unique(map: "UNIQ_2C8C6B2AD17F50A6") @db.VarChar(64)
  reference                                          String             @unique(map: "UNIQ_2C8C6B2AAEA34913") @db.VarChar(64)
  institution_id                                     String             @db.VarChar(32)
  link                                               String             @db.VarChar(255)
  accounts                                           Json?
  redirect                                           String?            @db.VarChar(255)
  status                                             String?            @db.VarChar(16)
  agreement_uuid                                     String?            @db.VarChar(64)
  agreement                                          Json?
  expiration_date                                    DateTime?          @db.DateTime(0)
  is_active                                          Boolean
  created                                            DateTime           @db.DateTime(0)
  updated                                            DateTime           @db.DateTime(0)
  deleted_at                                         DateTime?          @db.DateTime(0)
  nordigen_account                                   nordigen_account[]
  fos_user_nordigen_requisition_updated_byTofos_user fos_user?          @relation("nordigen_requisition_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2C8C6B2A16FE72E1")
  fos_user_nordigen_requisition_created_byTofos_user fos_user?          @relation("nordigen_requisition_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2C8C6B2ADE12AB56")

  @@index([updated_by], map: "IDX_2C8C6B2A16FE72E1")
  @@index([created_by], map: "IDX_2C8C6B2ADE12AB56")
}

model payment_account {
  id                                            Int                             @id @default(autoincrement())
  tpo_id                                        Int?
  created_by                                    Int?
  updated_by                                    Int?
  type                                          String                          @db.VarChar(255)
  uid                                           String                          @db.VarChar(255)
  details                                       String?                         @db.LongText
  is_active                                     Boolean
  created                                       DateTime                        @db.DateTime(0)
  updated                                       DateTime                        @db.DateTime(0)
  deleted_at                                    DateTime?                       @db.DateTime(0)
  connect_data                                  String?                         @db.LongText
  country_code                                  String?                         @db.VarChar(2)
  is_collect                                    Boolean
  is_default                                    Boolean
  signing_secret                                String?                         @db.VarChar(255)
  currency                                      String?                         @db.VarChar(3)
  methods                                       Json?
  recurrent_methods                             Json?
  time_zone                                     String?                         @db.VarChar(255)
  caption                                       String?                         @db.VarChar(255)
  contribution                                  contribution[]
  financial_transaction                         financial_transaction[]
  fos_user_payment_account_updated_byTofos_user fos_user?                       @relation("payment_account_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_647F584E16FE72E1")
  profile                                       profile?                        @relation(fields: [tpo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_647F584E22E6F5CC")
  fos_user_payment_account_created_byTofos_user fos_user?                       @relation("payment_account_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_647F584EDE12AB56")
  payment_option                                payment_option[]
  payment_recurrency                            payment_recurrency[]
  paypal_payout                                 paypal_payout[]
  plant_project_country_account                 plant_project_country_account[]
  tink_account                                  tink_account[]

  @@unique([tpo_id, type, uid], map: "unique_tpo_uid")
  @@index([updated_by], map: "IDX_647F584E16FE72E1")
  @@index([tpo_id], map: "IDX_647F584E22E6F5CC")
  @@index([created_by], map: "IDX_647F584EDE12AB56")
}

model payment_country {
  id                                            Int                            @id @default(autoincrement())
  tpo_id                                        Int
  created_by                                    Int?
  updated_by                                    Int?
  uid                                           String                         @db.VarChar(255)
  is_default                                    String                         @db.VarChar(255)
  tax_deductable                                String                         @db.VarChar(255)
  is_active                                     Boolean
  created                                       DateTime                       @db.DateTime(0)
  updated                                       DateTime                       @db.DateTime(0)
  updated_at                                    DateTime?                      @db.DateTime(0)
  deleted_at                                    DateTime?                      @db.DateTime(0)
  fos_user_payment_country_updated_byTofos_user fos_user?                      @relation("payment_country_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4A3AC78C16FE72E1")
  profile                                       profile                        @relation(fields: [tpo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4A3AC78C22E6F5CC")
  fos_user_payment_country_created_byTofos_user fos_user?                      @relation("payment_country_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4A3AC78CDE12AB56")
  paymentcountry_paymentoption                  paymentcountry_paymentoption[]

  @@unique([tpo_id, uid], map: "unique_tpo_uid")
  @@index([updated_by], map: "IDX_4A3AC78C16FE72E1")
  @@index([tpo_id], map: "IDX_4A3AC78C22E6F5CC")
  @@index([created_by], map: "IDX_4A3AC78CDE12AB56")
}

model payment_option {
  id                                           Int                            @id @default(autoincrement())
  tpo_id                                       Int
  payment_account_id                           Int
  created_by                                   Int?
  updated_by                                   Int?
  type                                         String                         @db.VarChar(255)
  is_active                                    Boolean
  created                                      DateTime                       @db.DateTime(0)
  updated                                      DateTime                       @db.DateTime(0)
  updated_at                                   DateTime?                      @db.DateTime(0)
  deleted_at                                   DateTime?                      @db.DateTime(0)
  fos_user_payment_option_updated_byTofos_user fos_user?                      @relation("payment_option_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7FBE9B2616FE72E1")
  profile                                      profile                        @relation(fields: [tpo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7FBE9B2622E6F5CC")
  payment_account                              payment_account                @relation(fields: [payment_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7FBE9B26AE9DDE6F")
  fos_user_payment_option_created_byTofos_user fos_user?                      @relation("payment_option_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7FBE9B26DE12AB56")
  paymentcountry_paymentoption                 paymentcountry_paymentoption[]

  @@unique([tpo_id, type, payment_account_id], map: "unique_tpo_type_account")
  @@index([updated_by], map: "IDX_7FBE9B2616FE72E1")
  @@index([tpo_id], map: "IDX_7FBE9B2622E6F5CC")
  @@index([payment_account_id], map: "IDX_7FBE9B26AE9DDE6F")
  @@index([created_by], map: "IDX_7FBE9B26DE12AB56")
}

model payment_recurrency {
  id                                                                  Int                  @id @default(autoincrement())
  user_profile_id                                                     Int?
  recurrency_stencil_id                                               Int?                 @unique(map: "UNIQ_3E402FBB52E7B367")
  latest_donation_id                                                  Int?                 @unique(map: "UNIQ_3E402FBB966E352D")
  created_by                                                          Int?
  updated_by                                                          Int?
  payment_gateway                                                     String               @db.VarChar(20)
  provider_response                                                   String?              @db.LongText
  provider_id                                                         String?              @db.VarChar(255)
  latest_payment_id                                                   String?              @db.VarChar(255)
  cycle_type                                                          String               @db.VarChar(10)
  start_date                                                          DateTime?            @db.DateTime(0)
  current_period_start                                                DateTime?            @db.DateTime(0)
  current_period_end                                                  DateTime?            @db.DateTime(0)
  ends_at                                                             DateTime?            @db.DateTime(0)
  status                                                              String               @db.VarChar(20)
  created                                                             DateTime             @db.DateTime(0)
  updated                                                             DateTime             @db.DateTime(0)
  updated_at                                                          DateTime?            @db.DateTime(0)
  deleted_at                                                          DateTime?            @db.DateTime(0)
  frequency                                                           String               @db.VarChar(20)
  cent_amount                                                         Int
  currency                                                            String               @db.VarChar(3)
  trial_period_start                                                  DateTime?            @db.DateTime(0)
  trial_period_end                                                    DateTime?            @db.DateTime(0)
  comment                                                             String?              @db.LongText
  is_synced                                                           Boolean?
  guid                                                                String               @unique(map: "UNIQ_3E402FBB2B6FCFB2") @db.VarChar(32)
  paused_until                                                        DateTime?            @db.DateTime(0)
  payment_account_id                                                  Int?
  planet_cash_account_id                                              Int?
  first_donation_id                                                   Int                  @unique(map: "UNIQ_3E402FBBD3342A5E")
  contribution_contribution_payment_recurrency_idTopayment_recurrency contribution[]       @relation("contribution_payment_recurrency_idTopayment_recurrency")
  fos_user_payment_recurrency_updated_byTofos_user                    fos_user?            @relation("payment_recurrency_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3E402FBB16FE72E1")
  recurrency_stencil                                                  recurrency_stencil?  @relation(fields: [recurrency_stencil_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3E402FBB52E7B367")
  profile                                                             profile?             @relation(fields: [user_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3E402FBB6B9DD454")
  planet_cash_account                                                 planet_cash_account? @relation(fields: [planet_cash_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3E402FBB8D7D2B2")
  contribution_payment_recurrency_latest_donation_idTocontribution    contribution?        @relation("payment_recurrency_latest_donation_idTocontribution", fields: [latest_donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3E402FBB966E352D")
  payment_account                                                     payment_account?     @relation(fields: [payment_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3E402FBBAE9DDE6F")
  contribution_payment_recurrency_first_donation_idTocontribution     contribution         @relation("payment_recurrency_first_donation_idTocontribution", fields: [first_donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3E402FBBD3342A5E")
  fos_user_payment_recurrency_created_byTofos_user                    fos_user?            @relation("payment_recurrency_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3E402FBBDE12AB56")

  @@index([updated_by], map: "IDX_3E402FBB16FE72E1")
  @@index([user_profile_id], map: "IDX_3E402FBB6B9DD454")
  @@index([planet_cash_account_id], map: "IDX_3E402FBB8D7D2B2")
  @@index([payment_account_id], map: "IDX_3E402FBBAE9DDE6F")
  @@index([created_by], map: "IDX_3E402FBBDE12AB56")
}

model paymentcountry_paymentoption {
  payment_country_id Int
  payment_option_id  Int
  payment_country    payment_country @relation(fields: [payment_country_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_52AE61B8CCD9BFA5")
  payment_option     payment_option  @relation(fields: [payment_option_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_52AE61B8E4ED3247")

  @@id([payment_country_id, payment_option_id])
  @@index([payment_country_id], map: "IDX_C2CA4156CCD9BFA5")
  @@index([payment_option_id], map: "IDX_C2CA4156E4ED3247")
}

model paypal_payout {
  id                                          Int                  @id @default(autoincrement())
  payment_account_id                          Int
  created_by                                  Int?
  updated_by                                  Int?
  account_key                                 String               @db.VarChar(255)
  currency                                    String               @db.VarChar(255)
  amount                                      Int                  @default(0)
  fee                                         Int                  @default(0)
  net                                         Int                  @default(0)
  month                                       Int                  @db.SmallInt
  year                                        Int                  @db.SmallInt
  progress_status                             String               @db.VarChar(32)
  created                                     DateTime             @db.DateTime(0)
  updated                                     DateTime             @db.DateTime(0)
  fos_user_paypal_payout_updated_byTofos_user fos_user?            @relation("paypal_payout_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_937C426316FE72E1")
  payment_account                             payment_account      @relation(fields: [payment_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_937C4263AE9DDE6F")
  fos_user_paypal_payout_created_byTofos_user fos_user?            @relation("paypal_payout_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_937C4263DE12AB56")
  paypal_transaction                          paypal_transaction[]

  @@unique([month, year, account_key], map: "unique_month_year_account_key")
  @@index([updated_by], map: "IDX_937C426316FE72E1")
  @@index([payment_account_id], map: "IDX_937C4263AE9DDE6F")
  @@index([created_by], map: "IDX_937C4263DE12AB56")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model paypal_transaction {
  id               Int            @id @default(autoincrement())
  donation_id      Int?
  payment_id       String         @unique(map: "UNIQ_8CB5DC994C3A3BB") @db.VarChar(255)
  payment_details  String         @db.LongText
  create_time      DateTime       @db.DateTime(0)
  status           String         @db.VarChar(255)
  source_type      String         @db.VarChar(32)
  amount           Int
  net              Int
  fee              Int
  exchange_rate    Float?
  currency         String?        @db.VarChar(255)
  paypal_payout_id Int?
  account_key      String         @db.VarChar(255)
  reference        String?        @db.VarChar(64)
  origin           String         @db.VarChar(16)
  transaction_code String?        @db.VarChar(255)
  target_amount    Int
  target_fee       Int
  target_net       Int
  target_currency  String         @db.VarChar(3)
  contribution     contribution?  @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8CB5DC994DC1279C")
  paypal_payout    paypal_payout? @relation(fields: [paypal_payout_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8CB5DC99B72CA04A")

  @@index([donation_id], map: "IDX_8CB5DC994DC1279C")
  @@index([paypal_payout_id], map: "IDX_8CB5DC99B72CA04A")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model pftp_btc_profiles {
  party_id   Int
  profile_id Int?
  email      String? @db.VarChar(255)

  @@index([party_id], map: "pftp_btc_profiles_idx1")
  @@index([profile_id], map: "pftp_btc_profiles_idx2")
  @@ignore
}

model planet_cash_account {
  id                                                                                     Int                       @id @default(autoincrement())
  owner_id                                                                               Int?
  created_by                                                                             Int?
  updated_by                                                                             Int?
  guid                                                                                   String                    @unique(map: "UNIQ_40FB99872B6FCFB2") @db.VarChar(32)
  owner_name                                                                             String                    @db.VarChar(255)
  balance                                                                                Int
  debit                                                                                  Int
  credit                                                                                 Int
  credit_limit                                                                           Int
  currency                                                                               String                    @db.VarChar(3)
  country                                                                                String                    @db.VarChar(2)
  is_active                                                                              Boolean?
  created                                                                                DateTime                  @db.DateTime(0)
  updated                                                                                DateTime                  @db.DateTime(0)
  top_up_threshold                                                                       Int?
  top_up_amount                                                                          Int?
  fee                                                                                    Int
  contribution                                                                           contribution[]
  payment_recurrency                                                                     payment_recurrency[]
  fos_user_planet_cash_account_updated_byTofos_user                                      fos_user?                 @relation("planet_cash_account_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_89A7F48416FE72E1")
  profile                                                                                profile?                  @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_89A7F4847E3C61F9")
  fos_user_planet_cash_account_created_byTofos_user                                      fos_user?                 @relation("planet_cash_account_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_89A7F484DE12AB56")
  planet_cash_transaction_planet_cash_transaction_debit_account_idToplanet_cash_account  planet_cash_transaction[] @relation("planet_cash_transaction_debit_account_idToplanet_cash_account")
  planet_cash_transaction_planet_cash_transaction_credit_account_idToplanet_cash_account planet_cash_transaction[] @relation("planet_cash_transaction_credit_account_idToplanet_cash_account")

  @@unique([owner_id, currency, country], map: "unique_owner_currency_country")
  @@unique([owner_id, is_active], map: "unique_owner_is_active")
  @@index([updated_by], map: "IDX_40FB998716FE72E1")
  @@index([owner_id], map: "IDX_40FB99877E3C61F9")
  @@index([created_by], map: "IDX_40FB9987DE12AB56")
}

model planet_cash_transaction {
  id                                                                                                Int                       @id @default(autoincrement())
  credit_account_id                                                                                 Int?
  debit_account_id                                                                                  Int?
  donation_id                                                                                       Int?
  created_by                                                                                        Int?
  updated_by                                                                                        Int?
  reversed_debit_id                                                                                 Int?
  reversed_credit_id                                                                                Int?
  guid                                                                                              String                    @unique(map: "UNIQ_7C7F316E2B6FCFB2") @db.VarChar(32)
  uid                                                                                               String                    @db.VarChar(64)
  type                                                                                              String                    @db.VarChar(10)
  operation                                                                                         String                    @db.VarChar(16)
  source_currency                                                                                   String                    @db.VarChar(3)
  target_currency                                                                                   String                    @db.VarChar(3)
  source_amount                                                                                     Int
  target_amount                                                                                     Int
  exchange_rate                                                                                     Float
  paid_out                                                                                          Boolean
  descriptor                                                                                        String?                   @db.VarChar(255)
  payment_date                                                                                      DateTime?                 @db.DateTime(0)
  created                                                                                           DateTime                  @db.DateTime(0)
  updated                                                                                           DateTime                  @db.DateTime(0)
  metadata                                                                                          Json?
  discr                                                                                             String                    @db.VarChar(20)
  fee_amount                                                                                        Int
  fos_user_planet_cash_transaction_updated_byTofos_user                                             fos_user?                 @relation("planet_cash_transaction_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DA73AEBF16FE72E1")
  planet_cash_account_planet_cash_transaction_debit_account_idToplanet_cash_account                 planet_cash_account?      @relation("planet_cash_transaction_debit_account_idToplanet_cash_account", fields: [debit_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DA73AEBF204C4EAA")
  contribution                                                                                      contribution?             @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DA73AEBF4DC1279C")
  planet_cash_account_planet_cash_transaction_credit_account_idToplanet_cash_account                planet_cash_account?      @relation("planet_cash_transaction_credit_account_idToplanet_cash_account", fields: [credit_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DA73AEBF6813E404")
  fos_user_planet_cash_transaction_created_byTofos_user                                             fos_user?                 @relation("planet_cash_transaction_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DA73AEBFDE12AB56")
  planet_cash_transaction_planet_cash_transaction_reversed_debit_idToplanet_cash_transaction        planet_cash_transaction?  @relation("planet_cash_transaction_reversed_debit_idToplanet_cash_transaction", fields: [reversed_debit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DA73AEBFEAD3C719")
  other_planet_cash_transaction_planet_cash_transaction_reversed_debit_idToplanet_cash_transaction  planet_cash_transaction[] @relation("planet_cash_transaction_reversed_debit_idToplanet_cash_transaction")
  planet_cash_transaction_planet_cash_transaction_reversed_credit_idToplanet_cash_transaction       planet_cash_transaction?  @relation("planet_cash_transaction_reversed_credit_idToplanet_cash_transaction", fields: [reversed_credit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DA73AEBFED71D503")
  other_planet_cash_transaction_planet_cash_transaction_reversed_credit_idToplanet_cash_transaction planet_cash_transaction[] @relation("planet_cash_transaction_reversed_credit_idToplanet_cash_transaction")

  @@index([updated_by], map: "IDX_7C7F316E16FE72E1")
  @@index([debit_account_id], map: "IDX_7C7F316E204C4EAA")
  @@index([donation_id], map: "IDX_7C7F316E4DC1279C")
  @@index([credit_account_id], map: "IDX_7C7F316E6813E404")
  @@index([created_by], map: "IDX_7C7F316EDE12AB56")
  @@index([reversed_debit_id], map: "IDX_7C7F316EEAD3C719")
  @@index([reversed_credit_id], map: "IDX_7C7F316EED71D503")
}

model plant_action {
  id                        Int          @id @default(autoincrement())
  user_profile_id           Int
  plant_promise_id          Int?
  tab_pledges_id            Int?         @unique(map: "UNIQ_A45C5D19D0E2536") @map("_tab_pledges_id")
  lmod                      DateTime?    @map("_lmod") @db.DateTime(0)
  tree_count                BigInt
  tree_type                 String?      @db.LongText
  plant_date                DateTime?    @db.DateTime(0)
  purpose                   String?      @db.VarChar(255)
  description               String?      @db.LongText
  legacy_data               String?      @db.LongText
  esri_x                    Float?
  esri_y                    Float?
  esri_score                Float?
  esri_country              String?      @db.VarChar(5)
  esri_address              String?      @db.VarChar(255)
  verified                  Int?         @db.SmallInt
  created                   DateTime     @db.DateTime(0)
  updated                   DateTime     @db.DateTime(0)
  deleted_at                DateTime?    @db.DateTime(0)
  tree_contribution_log_id  Int?         @unique(map: "UNIQ_A45C5D19DDFB8818")
  is_dirty                  Boolean?
  geo_data                  String?      @db.LongText
  party_id                  Int?
  community_tree_counter_id Int?
  tab_pledges               tab_pledges? @relation(fields: [tab_pledges_id], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_A45C5D19D0E2536")

  @@index([party_id], map: "IDX_A45C5D19213C1059")
  @@index([user_profile_id], map: "IDX_A45C5D196B9DD454")
  @@index([community_tree_counter_id], map: "IDX_A45C5D197FD0AE2")
  @@index([plant_promise_id], map: "IDX_A45C5D19D21C11F4")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model plant_location {
  id                                           Int                         @id @default(autoincrement())
  created_by                                   Int?
  updated_by                                   Int?
  plant_project_id                             Int?
  user_profile_id                              Int
  guid                                         String                      @unique(map: "UNIQ_773DC9992B6FCFB2") @db.VarChar(32)
  device_location                              String?                     @db.LongText
  plant_date                                   DateTime?                   @db.DateTime(0)
  capture_mode                                 String                      @db.VarChar(32)
  capture_status                               String                      @db.VarChar(32)
  geometry                                     String                      @db.LongText
  created                                      DateTime                    @db.DateTime(0)
  updated                                      DateTime                    @db.DateTime(0)
  deleted_at                                   DateTime?                   @db.DateTime(0)
  idempotency_key                              String                      @unique(map: "UNIQ_773DC9997FD1C147") @db.VarChar(64)
  registration_date                            DateTime                    @db.DateTime(0)
  scientific_species_id                        Int?
  parent_id                                    Int?
  type                                         String                      @db.VarChar(16)
  measurements                                 String?                     @db.LongText
  tag                                          String?                     @db.VarChar(255)
  discr                                        String                      @db.VarChar(20)
  plant_project_site_id                        Int?
  metadata                                     Json?
  trees_planted                                Int
  trees_allocated                              Int
  allocation_priority                          String                      @db.VarChar(16)
  sample_tree_count                            Int?
  hid                                          String?                     @db.VarChar(16)
  plant_date_start                             DateTime?                   @db.DateTime(0)
  plant_date_end                               DateTime?                   @db.DateTime(0)
  original_geometry                            Json
  geometry_updates_count                       Int
  image                                        String?                     @db.VarChar(255)
  other_species                                String?                     @db.VarChar(255)
  description                                  String?                     @db.VarChar(255)
  status_reason                                String?                     @db.VarChar(64)
  status                                       String?                     @db.VarChar(32)
  is_private                                   Boolean                     @default(false)
  revision_periodicity                         Json?
  last_measurement_date                        DateTime?                   @db.DateTime(0)
  next_measurement_date                        DateTime?                   @db.DateTime(0)
  fos_user_plant_location_updated_byTofos_user fos_user?                   @relation("plant_location_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_773DC99916FE72E1")
  plant_project_site                           plant_project_site?         @relation(fields: [plant_project_site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_773DC999310CED23")
  scientific_species                           scientific_species?         @relation(fields: [scientific_species_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_773DC99931861F83")
  profile                                      profile                     @relation(fields: [user_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_773DC9996B9DD454")
  plant_location                               plant_location?             @relation("plant_locationToplant_location", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_773DC999727ACA70")
  other_plant_location                         plant_location[]            @relation("plant_locationToplant_location")
  fos_user_plant_location_created_byTofos_user fos_user?                   @relation("plant_location_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_773DC999DE12AB56")
  plant_project                                plant_project?              @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_773DC999E83C4879")
  plant_location_coordinate                    plant_location_coordinate[]
  plant_location_history                       plant_location_history[]
  planted_species                              planted_species[]
  tree_allocation                              tree_allocation[]

  @@index([updated_by], map: "IDX_773DC99916FE72E1")
  @@index([plant_project_site_id], map: "IDX_773DC999310CED23")
  @@index([scientific_species_id], map: "IDX_773DC99931861F83")
  @@index([user_profile_id], map: "IDX_773DC9996B9DD454")
  @@index([parent_id], map: "IDX_773DC999727ACA70")
  @@index([created_by], map: "IDX_773DC999DE12AB56")
  @@index([plant_project_id], map: "IDX_773DC999E83C4879")
}

model plant_location_coordinate {
  id                                                      Int            @id @default(autoincrement())
  plant_location_id                                       Int
  created_by                                              Int?
  updated_by                                              Int?
  guid                                                    String         @unique(map: "UNIQ_F7CC1FD92B6FCFB2") @db.VarChar(32)
  image                                                   String?        @db.VarChar(255)
  status                                                  String         @db.VarChar(255)
  coordinate_index                                        String         @db.VarChar(255)
  created                                                 DateTime       @db.DateTime(0)
  updated                                                 DateTime       @db.DateTime(0)
  deleted_at                                              DateTime?      @db.DateTime(0)
  fos_user_plant_location_coordinate_updated_byTofos_user fos_user?      @relation("plant_location_coordinate_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_F7CC1FD916FE72E1")
  plant_location                                          plant_location @relation(fields: [plant_location_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_F7CC1FD9D6D3662E")
  fos_user_plant_location_coordinate_created_byTofos_user fos_user?      @relation("plant_location_coordinate_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_F7CC1FD9DE12AB56")

  @@index([updated_by], map: "IDX_F7CC1FD916FE72E1")
  @@index([plant_location_id], map: "IDX_F7CC1FD9D6D3662E")
  @@index([created_by], map: "IDX_F7CC1FD9DE12AB56")
}

model plant_location_history {
  id                Int            @id @default(autoincrement())
  plant_location_id Int
  created_by        Int?
  event_name        String         @db.VarChar(32)
  event_date        DateTime       @db.Date
  classification    String?        @db.VarChar(64)
  image             String?        @db.VarChar(255)
  measurements      Json?
  status_reason     String?        @db.VarChar(255)
  status            String?        @db.VarChar(32)
  created           DateTime       @db.DateTime(0)
  plant_location    plant_location @relation(fields: [plant_location_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_C9AECC18D6D3662E")
  fos_user          fos_user?      @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_C9AECC18DE12AB56")

  @@index([plant_location_id], map: "IDX_C9AECC18D6D3662E")
  @@index([created_by], map: "IDX_C9AECC18DE12AB56")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model plant_project {
  id                                                                                Int                             @id @default(autoincrement())
  esri_id                                                                           Int?
  tpo_id                                                                            Int?
  created_by                                                                        Int?
  updated_by                                                                        Int?
  uid                                                                               String?                         @unique(map: "UNIQ_553A1A97539B0606") @db.VarChar(64)
  remote_uid                                                                        String?                         @db.VarChar(255)
  name                                                                              String?                         @db.VarChar(255)
  synopsis1                                                                         String?                         @db.LongText
  synopsis2                                                                         String?                         @db.LongText
  videoUrl                                                                          String?                         @db.LongText
  count_target                                                                      Decimal?                        @db.Decimal(15, 0)
  count_planted                                                                     Decimal?                        @db.Decimal(15, 0)
  count_registered                                                                  Decimal?                        @db.Decimal(15, 0)
  count_donated                                                                     Decimal?                        @db.Decimal(15, 0)
  geo_longitude                                                                     Float?
  geo_latitude                                                                      Float?
  location                                                                          String?                         @db.LongText
  country_code                                                                      String?                         @db.VarChar(2)
  description                                                                       String?                         @db.LongText
  url                                                                               String?                         @db.LongText
  link_text                                                                         String?                         @db.LongText
  geometry                                                                          String?                         @db.LongText
  tree_cost                                                                         Decimal?                        @db.Decimal(8, 2)
  currency                                                                          String                          @db.VarChar(3)
  image                                                                             String?                         @db.VarChar(255)
  payment_config                                                                    String?                         @db.LongText
  survival_rate                                                                     Int?                            @db.SmallInt
  is_featured                                                                       Boolean?
  is_verified                                                                       Boolean
  is_certified                                                                      Boolean?
  is_active                                                                         Boolean
  created                                                                           DateTime                        @db.DateTime(0)
  updated                                                                           DateTime                        @db.DateTime(0)
  updated_at                                                                        DateTime?                       @db.DateTime(0)
  deleted_at                                                                        DateTime?                       @db.DateTime(0)
  accept_donations                                                                  Boolean
  treecounter_id                                                                    Int?
  position                                                                          Int?
  is_published                                                                      Boolean
  esri_geometry                                                                     String?                         @db.LongText
  review_score                                                                      Int
  slug                                                                              String                          @unique(map: "UNIQ_553A1A97989D9B62") @db.VarChar(255)
  survival_rate_status                                                              String?                         @db.VarChar(50)
  tax_deductible_countries                                                          String?                         @db.LongText
  min_quantity                                                                      Float?
  classification                                                                    String?                         @db.LongText
  tree_count_options                                                                String?                         @db.LongText
  guid                                                                              String                          @unique(map: "UNIQ_553A1A972B6FCFB2") @db.VarChar(32)
  prohibit_donations                                                                Boolean
  visitor_assistance                                                                Boolean?
  enable_plant_locations                                                            Boolean?
  year_abandoned                                                                    Int?
  first_tree_planted                                                                DateTime?                       @db.DateTime(0)
  planting_density                                                                  Int?
  planting_seasons                                                                  String?                         @db.LongText
  employees_count                                                                   Int?
  main_challenge                                                                    String?                         @db.VarChar(300)
  motivation                                                                        String?                         @db.VarChar(300)
  site_owner_type                                                                   String?                         @db.LongText
  site_owner_name                                                                   String?                         @db.VarChar(255)
  acquisition_date                                                                  Int?
  degradation_year                                                                  Int?
  degradation_cause                                                                 String?                         @db.VarChar(300)
  long_term_plan                                                                    String?                         @db.VarChar(300)
  review_requested                                                                  Boolean?
  verification_status                                                               String                          @db.VarChar(255)
  fixed_rates                                                                       String?                         @db.LongText
  purpose                                                                           String                          @db.VarChar(64)
  unit_cost                                                                         Float?
  cost_is_monthly                                                                   Boolean
  category                                                                          String?                         @db.VarChar(64)
  discr                                                                             String                          @db.VarChar(20)
  allocation_priority                                                               String?                         @db.VarChar(16)
  unit                                                                              String?                         @db.VarChar(255)
  project_meta                                                                      String?                         @db.LongText
  owner_id                                                                          Int?
  bouquet_purpose                                                                   String?                         @db.VarChar(64)
  comment                                                                           String?                         @db.VarChar(255)
  intensity                                                                         Int?                            @db.SmallInt
  revision_periodicity_level                                                        String?                         @db.VarChar(16)
  bouquet_project_option_bouquet_project_option_project_idToplant_project           bouquet_project_option[]        @relation("bouquet_project_option_project_idToplant_project")
  bouquet_project_option_bouquet_project_option_bouquet_project_idToplant_project   bouquet_project_option[]        @relation("bouquet_project_option_bouquet_project_idToplant_project")
  bouquet_project_project_bouquet_project_project_project_idToplant_project         bouquet_project_project[]       @relation("bouquet_project_project_project_idToplant_project")
  bouquet_project_project_bouquet_project_project_bouquet_project_idToplant_project bouquet_project_project[]       @relation("bouquet_project_project_bouquet_project_idToplant_project")
  competition                                                                       competition[]
  contribution                                                                      contribution[]
  financial_transaction                                                             financial_transaction[]
  plant_location                                                                    plant_location[]
  fos_user_plant_project_updated_byTofos_user                                       fos_user?                       @relation("plant_project_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_553A1A9716FE72E1")
  profile_plant_project_tpo_idToprofile                                             profile?                        @relation("plant_project_tpo_idToprofile", fields: [tpo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_553A1A9722E6F5CC")
  treecounter                                                                       treecounter?                    @relation(fields: [treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_553A1A9776C637A1")
  profile_plant_project_owner_idToprofile                                           profile?                        @relation("plant_project_owner_idToprofile", fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_553A1A977E3C61F9")
  fos_user_plant_project_created_byTofos_user                                       fos_user?                       @relation("plant_project_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_553A1A97DE12AB56")
  plant_project_certificate                                                         plant_project_certificate[]
  plant_project_expense                                                             plant_project_expense[]
  plant_project_image                                                               plant_project_image[]
  plant_project_payment_country                                                     plant_project_payment_country[]
  plant_project_site                                                                plant_project_site[]
  pledge_event                                                                      pledge_event[]
  project_plan                                                                      project_plan[]
  project_translation                                                               project_translation[]
  redeemable                                                                        redeemable[]
  review                                                                            review[]
  tenant_project                                                                    tenant_project[]
  tree_donation                                                                     tree_donation[]
  treecode_bulk                                                                     treecode_bulk[]
  treedonor_plant_project                                                           treedonor_plant_project[]
  treemapper_profile_project                                                        treemapper_profile_project[]

  @@unique([remote_uid, tpo_id], map: "unique_remote_uid")
  @@index([updated_by], map: "IDX_553A1A9716FE72E1")
  @@index([tpo_id], map: "IDX_553A1A9722E6F5CC")
  @@index([treecounter_id], map: "IDX_553A1A9776C637A1")
  @@index([owner_id], map: "IDX_553A1A977E3C61F9")
  @@index([created_by], map: "IDX_553A1A97DE12AB56")
}

model plant_project_certificate {
  id               Int           @id @default(autoincrement())
  plant_project_id Int
  certifier_name   String        @db.VarChar(255)
  issue_date       String        @db.VarChar(255)
  pdf              String?       @db.VarChar(255)
  guid             String        @unique(map: "UNIQ_6C2B89A02B6FCFB2") @db.VarChar(17)
  plant_project    plant_project @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_6C2B89A0E83C4879")

  @@index([plant_project_id], map: "IDX_6C2B89A0E83C4879")
}

model plant_project_country_account {
  id                               Int                           @id @default(autoincrement())
  payment_account_id               Int
  plant_project_payment_country_id Int
  payment_methods                  String?                       @db.VarChar(255)
  plant_project_payment_country    plant_project_payment_country @relation(fields: [plant_project_payment_country_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_C0AB3A2E2A8A6841")
  payment_account                  payment_account               @relation(fields: [payment_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_C0AB3A2EAE9DDE6F")

  @@index([plant_project_payment_country_id], map: "IDX_C0AB3A2E2A8A6841")
  @@index([payment_account_id], map: "IDX_C0AB3A2EAE9DDE6F")
}

model plant_project_expense {
  id               Int           @id @default(autoincrement())
  plant_project_id Int
  amount           Int
  year             Int
  pdf              String        @db.VarChar(255)
  guid             String        @unique(map: "UNIQ_EA8B76C32B6FCFB2") @db.VarChar(17)
  plant_project    plant_project @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EA8B76C3E83C4879")

  @@index([plant_project_id], map: "IDX_EA8B76C3E83C4879")
}

model plant_project_image {
  id               Int            @id @default(autoincrement())
  plant_project_id Int?
  image            String         @db.VarChar(255)
  description      String?        @db.LongText
  created          DateTime       @db.DateTime(0)
  updated          DateTime       @db.DateTime(0)
  deleted_at       DateTime?      @db.DateTime(0)
  updated_at       DateTime?      @db.DateTime(0)
  is_default       Boolean
  guid             String         @unique(map: "UNIQ_90D7B5852B6FCFB2") @db.VarChar(28)
  plant_project    plant_project? @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_90D7B585E83C4879")

  @@index([plant_project_id], map: "IDX_90D7B585E83C4879")
}

model plant_project_payment_country {
  id                            Int                             @id @default(autoincrement())
  country_code                  String                          @db.VarChar(3)
  is_default                    Boolean
  is_tax_deductible             Boolean
  plantProject_id               Int
  plant_project_country_account plant_project_country_account[]
  plant_project                 plant_project                   @relation(fields: [plantProject_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3EEBF36B91E02EC9")

  @@index([plantProject_id], map: "IDX_3EEBF36B91E02EC9")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model plant_project_site {
  id                                               Int              @id @default(autoincrement())
  plant_project_id                                 Int?
  name                                             String           @db.VarChar(255)
  description                                      String?          @db.LongText
  geometry                                         String?          @db.LongText
  position                                         Int
  status                                           String?          @db.VarChar(50)
  guid                                             String           @unique(map: "UNIQ_86D4FC532B6FCFB2") @db.VarChar(20)
  created_by                                       Int?
  updated_by                                       Int?
  created                                          DateTime         @db.DateTime(0)
  updated                                          DateTime         @db.DateTime(0)
  plant_location                                   plant_location[]
  fos_user_plant_project_site_updated_byTofos_user fos_user?        @relation("plant_project_site_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_86D4FC5316FE72E1")
  fos_user_plant_project_site_created_byTofos_user fos_user?        @relation("plant_project_site_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_86D4FC53DE12AB56")
  plant_project                                    plant_project?   @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_86D4FC53E83C4879")

  @@index([updated_by], map: "IDX_86D4FC5316FE72E1")
  @@index([created_by], map: "IDX_86D4FC53DE12AB56")
  @@index([plant_project_id], map: "IDX_86D4FC53E83C4879")
}

model planted_species {
  id                                            Int                 @id @default(autoincrement())
  scientific_species_id                         Int?
  plant_location_id                             Int
  created_by                                    Int?
  updated_by                                    Int?
  guid                                          String              @unique(map: "UNIQ_A97E8C692B6FCFB2") @db.VarChar(32)
  tree_count                                    Int
  other_species                                 String?             @db.VarChar(255)
  created                                       DateTime            @db.DateTime(0)
  updated                                       DateTime            @db.DateTime(0)
  deleted_at                                    DateTime?           @db.DateTime(0)
  fos_user_planted_species_updated_byTofos_user fos_user?           @relation("planted_species_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A97E8C6916FE72E1")
  scientific_species                            scientific_species? @relation(fields: [scientific_species_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A97E8C6931861F83")
  plant_location                                plant_location      @relation(fields: [plant_location_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A97E8C69D6D3662E")
  fos_user_planted_species_created_byTofos_user fos_user?           @relation("planted_species_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A97E8C69DE12AB56")

  @@index([updated_by], map: "IDX_A97E8C6916FE72E1")
  @@index([scientific_species_id], map: "IDX_A97E8C6931861F83")
  @@index([plant_location_id], map: "IDX_A97E8C69D6D3662E")
  @@index([created_by], map: "IDX_A97E8C69DE12AB56")
}

model platform_payout {
  id                                            Int                     @id @default(autoincrement())
  tpo_id                                        Int?
  bank_account_id                               Int?
  created_by                                    Int?
  updated_by                                    Int?
  sequence_number                               Int
  amount                                        Int
  fee                                           Int
  net                                           Int
  currency                                      String                  @db.VarChar(3)
  description                                   String?                 @db.LongText
  status                                        String                  @db.VarChar(20)
  payment_date                                  DateTime?               @db.DateTime(0)
  deleted_at                                    DateTime?               @db.DateTime(0)
  created                                       DateTime                @db.DateTime(0)
  updated                                       DateTime                @db.DateTime(0)
  country                                       String                  @db.VarChar(2)
  financial_transaction                         financial_transaction[]
  bank_account                                  bank_account?           @relation(fields: [bank_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A4C9B25F12CB990C")
  fos_user_platform_payout_updated_byTofos_user fos_user?               @relation("platform_payout_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A4C9B25F16FE72E1")
  profile                                       profile?                @relation(fields: [tpo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A4C9B25F22E6F5CC")
  fos_user_platform_payout_created_byTofos_user fos_user?               @relation("platform_payout_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A4C9B25FDE12AB56")

  @@index([bank_account_id], map: "IDX_A4C9B25F12CB990C")
  @@index([updated_by], map: "IDX_A4C9B25F16FE72E1")
  @@index([tpo_id], map: "IDX_A4C9B25F22E6F5CC")
  @@index([created_by], map: "IDX_A4C9B25FDE12AB56")
}

model pledge_event {
  id                                         Int                  @id @default(autoincrement())
  created_by                                 Int?
  updated_by                                 Int?
  slug                                       String               @unique(map: "UNIQ_30E4D180989D9B62") @db.VarChar(255)
  name                                       String               @db.VarChar(255)
  description                                String?              @db.LongText
  created                                    DateTime             @db.DateTime(0)
  updated                                    DateTime             @db.DateTime(0)
  updated_at                                 DateTime?            @db.DateTime(0)
  deleted_at                                 DateTime?            @db.DateTime(0)
  image                                      String?              @db.VarChar(255)
  position                                   Int
  is_active                                  Boolean
  treecounter_id                             Int?
  plant_project_id                           Int?
  total                                      Int
  event_date                                 DateTime?            @db.DateTime(0)
  language                                   String?              @db.VarChar(5)
  email_text                                 String?              @db.LongText
  video_url                                  String?              @db.LongText
  event_pledge                               event_pledge[]
  fos_user_pledge_event_updated_byTofos_user fos_user?            @relation("pledge_event_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_30E4D18016FE72E1")
  treecounter                                treecounter?         @relation(fields: [treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_30E4D18076C637A1")
  fos_user_pledge_event_created_byTofos_user fos_user?            @relation("pledge_event_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_30E4D180DE12AB56")
  plant_project                              plant_project?       @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_30E4D180E83C4879")
  pledge_event_image                         pledge_event_image[]

  @@index([updated_by], map: "IDX_30E4D18016FE72E1")
  @@index([treecounter_id], map: "IDX_30E4D18076C637A1")
  @@index([created_by], map: "IDX_30E4D180DE12AB56")
  @@index([plant_project_id], map: "IDX_30E4D180E83C4879")
}

model pledge_event_image {
  id              Int           @id @default(autoincrement())
  pledge_event_id Int?
  image           String        @db.VarChar(255)
  description     String?       @db.LongText
  created         DateTime      @db.DateTime(0)
  updated         DateTime      @db.DateTime(0)
  deleted_at      DateTime?     @db.DateTime(0)
  updated_at      DateTime?     @db.DateTime(0)
  pledge_event    pledge_event? @relation(fields: [pledge_event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_9856990DE83C4879")

  @@index([pledge_event_id], map: "IDX_9856990DB8300CBF")
}

model privacy {
  id                                    Int       @id @default(autoincrement())
  created_by                            Int?
  updated_by                            Int?
  heading                               String?   @db.LongText
  description                           String?   @db.LongText
  slug                                  String?   @db.VarChar(255)
  position                              Int
  created                               DateTime  @db.DateTime(0)
  updated                               DateTime  @db.DateTime(0)
  deleted_at                            DateTime? @db.DateTime(0)
  fos_user_privacy_updated_byTofos_user fos_user? @relation("privacy_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_C384190816FE72E1")
  fos_user_privacy_created_byTofos_user fos_user? @relation("privacy_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_C3841908DE12AB56")

  @@index([updated_by], map: "IDX_C384190816FE72E1")
  @@index([created_by], map: "IDX_C3841908DE12AB56")
}

model profile {
  id                                                        Int                         @id @default(autoincrement())
  user_id                                                   Int?
  treecounter_id                                            Int?                        @unique(map: "UNIQ_8157AA0F76C637A1")
  supported_treecounter_id                                  Int?
  created_by                                                Int?
  updated_by                                                Int?
  uid                                                       String?                     @db.VarChar(50)
  encryption_key                                            String?                     @db.VarChar(255)
  activation_token                                          String?                     @db.VarChar(255)
  type                                                      String?                     @db.VarChar(50)
  sub_type                                                  String?                     @db.VarChar(50)
  name                                                      String?                     @db.VarChar(255)
  gender                                                    String?                     @db.VarChar(1)
  title                                                     String?                     @db.VarChar(50)
  firstname                                                 String?                     @db.VarChar(255)
  lastname                                                  String?                     @db.VarChar(255)
  address                                                   String?                     @db.VarChar(255)
  zip_code                                                  String?                     @db.VarChar(50)
  city                                                      String?                     @db.VarChar(150)
  geo_longitude                                             Float?
  geo_latitude                                              Float?
  country_code                                              String?                     @db.VarChar(2)
  currency                                                  String?                     @db.VarChar(3)
  may_publish                                               Boolean?
  may_contact                                               Boolean?
  email                                                     String                      @unique(map: "UNIQ_8157AA0FE7927C74") @db.VarChar(100)
  phone                                                     String?                     @db.VarChar(50)
  image                                                     String?                     @db.VarChar(255)
  is_confirmed                                              Boolean
  is_active                                                 Boolean
  synopsis1                                                 String?                     @db.LongText
  synopsis2                                                 String?                     @db.LongText
  url                                                       String?                     @db.LongText
  link_text                                                 String?                     @db.LongText
  created                                                   DateTime                    @db.DateTime(0)
  updated                                                   DateTime                    @db.DateTime(0)
  updated_at                                                DateTime?                   @db.DateTime(0)
  deleted_at                                                DateTime?                   @db.DateTime(0)
  discr                                                     String                      @db.VarChar(20)
  is_verified                                               Boolean?
  is_certified                                              Boolean?
  is_deleted                                                Boolean
  new_email                                                 String?                     @unique(map: "UNIQ_8157AA0F1F043FA9") @db.VarChar(100)
  locale                                                    String?                     @db.VarChar(20)
  payer_ids                                                 Json?
  payment_setup                                             String?                     @db.LongText
  verification_status                                       String?                     @db.VarChar(255)
  signup_method                                             String                      @default("system") @db.VarChar(20)
  guid                                                      String                      @unique(map: "UNIQ_8157AA0F2B6FCFB2") @db.VarChar(32)
  min_payout_amount                                         Int?
  payout_period                                             Int?
  has_logo_license                                          Boolean?
  tin                                                       String?                     @db.VarChar(255)
  accounting_record_accounting_record_debtor_idToprofile    accounting_record[]         @relation("accounting_record_debtor_idToprofile")
  accounting_record_accounting_record_creditor_idToprofile  accounting_record[]         @relation("accounting_record_creditor_idToprofile")
  bank_account                                              bank_account[]
  contribution_contribution_tpo_idToprofile                 contribution[]              @relation("contribution_tpo_idToprofile")
  contribution_contribution_profile_idToprofile             contribution[]              @relation("contribution_profile_idToprofile")
  country_currency_tpo                                      country_currency_tpo[]
  event_pledge                                              event_pledge[]
  favorite                                                  favorite[]
  payment_account                                           payment_account[]
  payment_country                                           payment_country[]
  payment_option                                            payment_option[]
  payment_recurrency                                        payment_recurrency[]
  planet_cash_account                                       planet_cash_account[]
  plant_location                                            plant_location[]
  plant_project_plant_project_tpo_idToprofile               plant_project[]             @relation("plant_project_tpo_idToprofile")
  plant_project_plant_project_owner_idToprofile             plant_project[]             @relation("plant_project_owner_idToprofile")
  platform_payout                                           platform_payout[]
  fos_user_profile_updated_byTofos_user                     fos_user?                   @relation("profile_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8157AA0F16FE72E1")
  treecounter_profile_treecounter_idTotreecounter           treecounter?                @relation("profile_treecounter_idTotreecounter", fields: [treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8157AA0F76C637A1")
  treecounter_profile_supported_treecounter_idTotreecounter treecounter?                @relation("profile_supported_treecounter_idTotreecounter", fields: [supported_treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8157AA0F88513627")
  fos_user_profile_user_idTofos_user                        fos_user?                   @relation("profile_user_idTofos_user", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8157AA0FA76ED395")
  fos_user_profile_created_byTofos_user                     fos_user?                   @relation("profile_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8157AA0FDE12AB56")
  redeemable                                                redeemable[]
  review                                                    review[]
  reviewer                                                  reviewer?
  species                                                   species[]
  tenant_donor                                              tenant_donor[]
  tenant_tpo                                                tenant_tpo[]
  tpo_donor_proxy                                           tpo_donor_proxy[]
  treecode_bulk                                             treecode_bulk[]
  treedonor_plant_project                                   treedonor_plant_project[]
  treemapper_profile_project                                treemapper_profile_project?
  user_profile_tag                                          user_profile_tag[]
  userfeed_userfeed_originator_idToprofile                  userfeed[]                  @relation("userfeed_originator_idToprofile")
  userfeed_userfeed_recipient_idToprofile                   userfeed[]                  @relation("userfeed_recipient_idToprofile")

  @@index([updated_by], map: "IDX_8157AA0F16FE72E1")
  @@index([supported_treecounter_id], map: "IDX_8157AA0F88513627")
  @@index([user_id], map: "IDX_8157AA0FA76ED395")
  @@index([created_by], map: "IDX_8157AA0FDE12AB56")
}

model project_plan {
  id                                         Int                        @id @default(autoincrement())
  project_id                                 Int
  created_by                                 Int?
  updated_by                                 Int?
  caption                                    String?                    @db.VarChar(255)
  description                                String?                    @db.LongText
  icon                                       String?                    @db.LongText
  quantity                                   Float?
  created                                    DateTime                   @db.DateTime(0)
  updated                                    DateTime                   @db.DateTime(0)
  deleted_at                                 DateTime?                  @db.DateTime(0)
  is_default                                 Boolean
  guid                                       String                     @unique(map: "UNIQ_E4CB93652B6FCFB2") @db.VarChar(32)
  discr                                      String                     @db.VarChar(20)
  is_active                                  Boolean
  is_public                                  Boolean
  bouquet_plan_option                        bouquet_plan_option[]
  contribution                               contribution[]
  plant_project                              plant_project              @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_E4CB9365166D1F9C")
  fos_user_project_plan_updated_byTofos_user fos_user?                  @relation("project_plan_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_E4CB936516FE72E1")
  fos_user_project_plan_created_byTofos_user fos_user?                  @relation("project_plan_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_E4CB9365DE12AB56")
  project_plan_translation                   project_plan_translation[]

  @@index([project_id], map: "IDX_E4CB9365166D1F9C")
  @@index([updated_by], map: "IDX_E4CB936516FE72E1")
  @@index([created_by], map: "IDX_E4CB9365DE12AB56")
}

model project_plan_translation {
  id              Int           @id @default(autoincrement())
  translatable_id Int?
  caption         String?       @db.VarChar(255)
  description     String?       @db.LongText
  locale          String        @db.VarChar(5)
  project_plan    project_plan? @relation(fields: [translatable_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_FD555E6D2C2AC5D3")

  @@unique([translatable_id, locale], map: "project_plan_translation_unique_translation")
  @@index([translatable_id], map: "IDX_FD555E6D2C2AC5D3")
}

model project_translation {
  id              Int            @id @default(autoincrement())
  translatable_id Int?
  name            String?        @db.VarChar(255)
  description     String?        @db.LongText
  project_meta    Json?
  locale          String         @db.VarChar(5)
  plant_project   plant_project? @relation(fields: [translatable_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_7CA6B2942C2AC5D3")

  @@unique([translatable_id, locale], map: "project_translation_unique_translation")
  @@index([translatable_id], map: "IDX_7CA6B2942C2AC5D3")
}

model receipt {
  id                 Int       @id @default(autoincrement())
  customer_id        Int
  issuer_id          Int
  source_id          Int
  template_id        Int
  created_by         Int?
  updated_by         Int?
  guid               String    @db.VarChar(32)
  dtn                String    @db.VarChar(32)
  cancellation_code  String?   @db.VarChar(32)
  cancellation_date  DateTime? @db.DateTime(0)
  challenge          String    @db.VarChar(255)
  reference          String?   @db.VarChar(255)
  amount             Int
  currency           String    @db.VarChar(3)
  descriptor         String    @db.VarChar(255)
  donor              Json
  country            String    @db.VarChar(3)
  payment_date       DateTime  @db.DateTime(0)
  issue_date         DateTime  @db.DateTime(0)
  status             String    @db.VarChar(20)
  live_mode          Boolean
  created            DateTime  @db.DateTime(0)
  updated            DateTime  @db.DateTime(0)
  deleted_at         DateTime? @db.DateTime(0)
  summary_receipt_id Int?
  discr              String    @db.VarChar(20)
  from_date          DateTime? @db.Date
  till_date          DateTime? @db.Date
  receipt_count      Int?
  issuer             issuer    @relation(fields: [issuer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5399B645BB9D6FEE")

  @@unique([dtn, challenge, live_mode], map: "unique_dtn_challenge")
  @@unique([source_id, reference, live_mode], map: "unique_source_reference")
  @@index([source_id], map: "IDX_5399B645953C1C61")
  @@index([issuer_id], map: "IDX_5399B645BB9D6FEE")
}

model recurrency_stencil {
  id                                               Int                 @id @default(autoincrement())
  created_by                                       Int?
  updated_by                                       Int?
  gift_treecounter_id                              Int?
  subject_class                                    String              @db.VarChar(255)
  comment                                          String?             @db.LongText
  created                                          DateTime            @db.DateTime(0)
  updated                                          DateTime            @db.DateTime(0)
  deleted_at                                       DateTime?           @db.DateTime(0)
  discr                                            String              @db.VarChar(20)
  tenant_id                                        Int?
  gift_method                                      String?             @db.VarChar(20)
  payment_recurrency                               payment_recurrency?
  fos_user_recurrency_stencil_updated_byTofos_user fos_user?           @relation("recurrency_stencil_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FD20904816FE72E1")
  treecounter                                      treecounter?        @relation(fields: [gift_treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FD20904846987EF4")
  tenant                                           tenant?             @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FD2090489033212A")
  fos_user_recurrency_stencil_created_byTofos_user fos_user?           @relation("recurrency_stencil_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FD209048DE12AB56")

  @@index([updated_by], map: "IDX_FD20904816FE72E1")
  @@index([gift_treecounter_id], map: "IDX_FD20904846987EF4")
  @@index([tenant_id], map: "IDX_FD2090489033212A")
  @@index([created_by], map: "IDX_FD209048DE12AB56")
}

model redeemable {
  id                                                             Int              @id @default(autoincrement())
  treecounter_id                                                 Int?
  plant_project_id                                               Int?
  donation_contribution_id                                       Int?
  contribution_id                                                Int?
  tpo_id                                                         Int?
  tpo_recipient_proxy_id                                         Int?
  tpo_treecode_bulk_id                                           Int?
  origin                                                         String           @db.VarChar(50)
  type                                                           String           @db.VarChar(50)
  tree_count                                                     Decimal          @db.Decimal(14, 2)
  redemption_code                                                String?          @unique(map: "UNIQ_8F2F277AA33CB018") @db.VarChar(255)
  redemption_date                                                DateTime?        @db.DateTime(0)
  is_verified                                                    Boolean?
  is_redeemed                                                    Boolean
  created                                                        DateTime         @db.DateTime(0)
  updated                                                        DateTime         @db.DateTime(0)
  discr                                                          String           @db.VarChar(20)
  email                                                          String?          @db.VarChar(50)
  firstname                                                      String?          @db.VarChar(50)
  lastname                                                       String?          @db.VarChar(50)
  remote_plant_project_uid                                       String?          @db.VarChar(255)
  remote_recipient_uid                                           String?          @db.VarChar(255)
  remote_uid                                                     String?          @db.VarChar(255)
  remote_donation_uid                                            String?          @db.VarChar(255)
  serial_id                                                      Int?
  deleted_at                                                     DateTime?        @db.DateTime(0)
  redemption_code_canonical                                      String?          @unique(map: "UNIQ_8F2F277A3A72DFC9") @db.VarChar(255)
  created_by                                                     Int?
  updated_by                                                     Int?
  message                                                        String?          @db.LongText
  recipient_name                                                 String?          @db.VarChar(255)
  guid                                                           String?          @unique(map: "UNIQ_8F2F277A2B6FCFB2") @db.VarChar(32)
  fos_user_redeemable_updated_byTofos_user                       fos_user?        @relation("redeemable_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8F2F277A16FE72E1")
  profile                                                        profile?         @relation(fields: [tpo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8F2F277A22E6F5CC")
  treecode_bulk                                                  treecode_bulk?   @relation(fields: [tpo_treecode_bulk_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8F2F277A65075F4B")
  contribution_redeemable_donation_contribution_idTocontribution contribution?    @relation("redeemable_donation_contribution_idTocontribution", fields: [donation_contribution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8F2F277A6ED93F87")
  treecounter                                                    treecounter?     @relation(fields: [treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8F2F277A76C637A1")
  fos_user_redeemable_created_byTofos_user                       fos_user?        @relation("redeemable_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8F2F277ADE12AB56")
  plant_project                                                  plant_project?   @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8F2F277AE83C4879")
  tpo_donor_proxy                                                tpo_donor_proxy? @relation(fields: [tpo_recipient_proxy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8F2F277AFD9C96B7")
  contribution_redeemable_contribution_idTocontribution          contribution?    @relation("redeemable_contribution_idTocontribution", fields: [contribution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8F2F277AFE5E5FBD")

  @@index([updated_by], map: "IDX_8F2F277A16FE72E1")
  @@index([tpo_id], map: "IDX_8F2F277A22E6F5CC")
  @@index([tpo_treecode_bulk_id], map: "IDX_8F2F277A65075F4B")
  @@index([donation_contribution_id], map: "IDX_8F2F277A6ED93F87")
  @@index([treecounter_id], map: "IDX_8F2F277A76C637A1")
  @@index([created_by], map: "IDX_8F2F277ADE12AB56")
  @@index([plant_project_id], map: "IDX_8F2F277AE83C4879")
  @@index([tpo_recipient_proxy_id], map: "IDX_8F2F277AFD9C96B7")
  @@index([contribution_id], map: "IDX_8F2F277AFE5E5FBD")
}

model refresh_tokens {
  id            Int      @id @default(autoincrement())
  refresh_token String   @unique(map: "UNIQ_9BACE7E1C74F2195") @db.VarChar(128)
  username      String   @db.VarChar(255)
  valid         DateTime @db.DateTime(0)
}

model registered_tree_donation {
  id                                                     Int       @id @default(autoincrement())
  created_by                                             Int?
  updated_by                                             Int?
  trees_donated                                          Int?
  trees_allocated                                        Int?
  allocation_priority                                    String    @db.VarChar(16)
  created                                                DateTime  @db.DateTime(0)
  updated                                                DateTime  @db.DateTime(0)
  deleted_at                                             DateTime? @db.DateTime(0)
  fos_user_registered_tree_donation_updated_byTofos_user fos_user? @relation("registered_tree_donation_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5A7E20B116FE72E1")
  fos_user_registered_tree_donation_created_byTofos_user fos_user? @relation("registered_tree_donation_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5A7E20B1DE12AB56")

  @@index([updated_by], map: "IDX_5A7E20B116FE72E1")
  @@index([created_by], map: "IDX_5A7E20B1DE12AB56")
}

model request_log {
  id             Int       @id @default(autoincrement())
  session_id     String    @db.VarChar(64)
  client_ip      String    @db.VarChar(64)
  scheme         String    @db.VarChar(10)
  method         String    @db.VarChar(10)
  locale         String    @db.VarChar(5)
  default_locale String    @db.VarChar(5)
  host           String    @db.VarChar(255)
  request_uri    String    @db.LongText
  headers        String?   @db.LongText
  query          String?   @db.LongText
  request        String?   @db.LongText
  request_body   String?   @db.LongText
  response_body  String?   @db.LongText
  created        DateTime  @db.DateTime(0)
  status_code    Int?
  user_id        Int?
  user_name      String?   @db.VarChar(255)
  fos_user       fos_user? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_42152989A76ED395")

  @@index([user_id], map: "IDX_42152989A76ED395")
  @@index([created], map: "search_by_date_index")
  @@index([method], map: "search_by_method_index")
  @@index([session_id], map: "search_by_session_id")
}

model review {
  id                                   Int                  @id @default(autoincrement())
  user_profile_id                      Int
  plant_project_id                     Int
  created_by                           Int?
  updated_by                           Int?
  summary                              String               @db.VarChar(255)
  score                                Int
  pdf                                  String?              @db.VarChar(255)
  created                              DateTime             @db.DateTime(0)
  updated                              DateTime             @db.DateTime(0)
  updated_at                           DateTime?            @db.DateTime(0)
  deleted_at                           DateTime?            @db.DateTime(0)
  fos_user_review_updated_byTofos_user fos_user?            @relation("review_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_794381C616FE72E1")
  profile                              profile              @relation(fields: [user_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_794381C66B9DD454")
  fos_user_review_created_byTofos_user fos_user?            @relation("review_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_794381C6DE12AB56")
  plant_project                        plant_project        @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_794381C6E83C4879")
  review_image                         review_image[]
  review_index_score                   review_index_score[]

  @@index([updated_by], map: "IDX_794381C616FE72E1")
  @@index([user_profile_id], map: "IDX_794381C66B9DD454")
  @@index([created_by], map: "IDX_794381C6DE12AB56")
  @@index([plant_project_id], map: "IDX_794381C6E83C4879")
}

model review_image {
  id          Int       @id @default(autoincrement())
  review_id   Int?
  image       String    @db.VarChar(255)
  description String?   @db.LongText
  created     DateTime  @db.DateTime(0)
  updated     DateTime  @db.DateTime(0)
  deleted_at  DateTime? @db.DateTime(0)
  updated_at  DateTime? @db.DateTime(0)
  review      review?   @relation(fields: [review_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_D6B328443E2E969B")

  @@index([review_id], map: "IDX_D6B328443E2E969B")
}

model review_index {
  id                                         Int                  @id @default(autoincrement())
  created_by                                 Int?
  updated_by                                 Int?
  slug                                       String               @db.VarChar(50)
  position                                   Int
  name                                       String               @db.VarChar(255)
  description                                String?              @db.LongText
  is_active                                  Boolean
  created                                    DateTime             @db.DateTime(0)
  updated                                    DateTime             @db.DateTime(0)
  deleted_at                                 DateTime?            @db.DateTime(0)
  fos_user_review_index_updated_byTofos_user fos_user?            @relation("review_index_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_93FD4B1A16FE72E1")
  fos_user_review_index_created_byTofos_user fos_user?            @relation("review_index_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_93FD4B1ADE12AB56")
  review_index_score                         review_index_score[]

  @@index([updated_by], map: "IDX_93FD4B1A16FE72E1")
  @@index([created_by], map: "IDX_93FD4B1ADE12AB56")
}

model review_index_score {
  id              Int           @id @default(autoincrement())
  review_id       Int?
  review_index_id Int?
  score           Int
  review          review?       @relation(fields: [review_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_BE965BBB3E2E969B")
  review_index    review_index? @relation(fields: [review_index_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_BE965BBBA771FB6A")

  @@index([review_id], map: "IDX_BE965BBB3E2E969B")
  @@index([review_index_id], map: "IDX_BE965BBBA771FB6A")
}

model reviewer {
  id                                     Int       @id @default(autoincrement())
  user_profile_id                        Int?      @unique(map: "UNIQ_E04727306B9DD454")
  created_by                             Int?
  updated_by                             Int?
  organization                           String    @db.VarChar(255)
  created                                DateTime  @db.DateTime(0)
  updated                                DateTime  @db.DateTime(0)
  deleted_at                             DateTime? @db.DateTime(0)
  fos_user_reviewer_updated_byTofos_user fos_user? @relation("reviewer_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_E047273016FE72E1")
  profile                                profile?  @relation(fields: [user_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_E04727306B9DD454")
  fos_user_reviewer_created_byTofos_user fos_user? @relation("reviewer_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_E0472730DE12AB56")

  @@index([updated_by], map: "IDX_E047273016FE72E1")
  @@index([created_by], map: "IDX_E0472730DE12AB56")
}

model sat1_sms_log {
  id           Int          @id @default(autoincrement())
  donation_id  Int          @unique(map: "UNIQ_C73D2E844DC1279C")
  msisdn       String       @db.VarChar(32)
  msgid        String       @db.VarChar(64)
  status       String       @db.VarChar(16)
  description  String       @db.LongText
  created      DateTime     @db.DateTime(0)
  contribution contribution @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_C73D2E844DC1279C")
}

model scientific_species {
  id                                               Int               @id @default(autoincrement())
  created_by                                       Int?
  updated_by                                       Int?
  name                                             String            @db.VarChar(255)
  scientific_name                                  String            @unique(map: "UNIQ_3DE16F5847F759B3") @db.VarChar(255)
  image                                            String?           @db.VarChar(255)
  created                                          DateTime          @db.DateTime(0)
  updated                                          DateTime          @db.DateTime(0)
  deleted_at                                       DateTime?         @db.DateTime(0)
  guid                                             String            @unique(map: "UNIQ_3DE16F582B6FCFB2") @db.VarChar(32)
  plant_location                                   plant_location[]
  planted_species                                  planted_species[]
  fos_user_scientific_species_updated_byTofos_user fos_user?         @relation("scientific_species_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3DE16F5816FE72E1")
  fos_user_scientific_species_created_byTofos_user fos_user?         @relation("scientific_species_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3DE16F58DE12AB56")
  species                                          species[]

  @@index([updated_by], map: "IDX_3DE16F5816FE72E1")
  @@index([created_by], map: "IDX_3DE16F58DE12AB56")
}

model sequence {
  id   Int    @id @default(autoincrement())
  idx  Int
  type String @db.VarChar(255)
}

model session_data {
  id           Int      @id @default(autoincrement())
  session_id   String   @unique(map: "UNIQ_6B82F349613FECDF") @db.VarChar(255)
  route_name   String   @db.VarChar(255)
  route_params String   @db.LongText
  created      DateTime @db.DateTime(0)
  updated      DateTime @db.DateTime(0)
}

model sessions {
  sess_id       Bytes @id @db.VarBinary(128)
  sess_data     Bytes @db.Blob
  sess_lifetime Int   @db.UnsignedInt
  sess_time     Int   @db.UnsignedInt

  @@index([sess_lifetime])
}

model shell_migration {
  version String @unique(map: "version") @db.VarChar(255)
}

model species {
  id                                    Int                @id @default(autoincrement())
  created_by                            Int?
  updated_by                            Int?
  guid                                  String             @unique(map: "UNIQ_A50FF7122B6FCFB2") @db.VarChar(32)
  description                           String?            @db.VarChar(255)
  image                                 String?            @db.VarChar(255)
  created                               DateTime           @db.DateTime(0)
  updated                               DateTime           @db.DateTime(0)
  deleted_at                            DateTime?          @db.DateTime(0)
  scientific_species_id                 Int
  user_profile_id                       Int
  aliases                               String             @db.VarChar(255)
  fos_user_species_updated_byTofos_user fos_user?          @relation("species_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A50FF71216FE72E1")
  scientific_species                    scientific_species @relation(fields: [scientific_species_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A50FF71231861F83")
  profile                               profile            @relation(fields: [user_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A50FF7126B9DD454")
  fos_user_species_created_byTofos_user fos_user?          @relation("species_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A50FF712DE12AB56")

  @@index([updated_by], map: "IDX_A50FF71216FE72E1")
  @@index([scientific_species_id], map: "IDX_A50FF71231861F83")
  @@index([user_profile_id], map: "IDX_A50FF7126B9DD454")
  @@index([created_by], map: "IDX_A50FF712DE12AB56")
}

model stripe_charge {
  id                  Int           @id @default(autoincrement())
  account_key         String        @db.VarChar(255)
  balance_transaction String?       @db.VarChar(255)
  contribution_uid    String?       @db.VarChar(255)
  stripe_id           String        @unique(map: "UNIQ_FD26D9083F1B1098") @db.VarChar(255)
  charge_date         DateTime      @db.DateTime(0)
  amount              Int
  currency            String        @db.VarChar(3)
  status              String        @db.VarChar(20)
  data                String        @db.LongText
  donation_id         Int?
  contribution        contribution? @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FD26D9084DC1279C")

  @@index([donation_id], map: "IDX_FD26D9084DC1279C")
}

model stripe_dispute {
  id                  Int           @id @default(autoincrement())
  account_key         String        @db.VarChar(255)
  balance_transaction String?       @db.VarChar(255)
  stripe_id           String        @unique(map: "UNIQ_135561FD3F1B1098") @db.VarChar(255)
  amount              Int
  currency            String        @db.VarChar(3)
  charge              String        @db.VarChar(255)
  reason              String?       @db.VarChar(255)
  data                String        @db.LongText
  donation_id         Int?
  contribution        contribution? @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_135561FD4DC1279C")

  @@index([donation_id], map: "IDX_135561FD4DC1279C")
}

model stripe_duplicate {
  id          Int      @id @default(autoincrement())
  account_key String   @db.VarChar(255)
  stripe_id   String   @unique(map: "UNIQ_ADCAA7D13F1B1098") @db.VarChar(255)
  created     DateTime @db.DateTime(0)
  data        String   @db.LongText
}

model stripe_event {
  id                Int      @id @default(autoincrement())
  account_key       String   @db.VarChar(255)
  connected_account String?  @db.VarChar(255)
  live_mode         Boolean
  stripe_id         String   @unique(map: "UNIQ_110C630A3F1B1098") @db.VarChar(255)
  object_id         String   @db.VarChar(255)
  type              String   @db.VarChar(255)
  data              String   @db.LongText
  created           DateTime @db.DateTime(0)
}

model stripe_event_log {
  id          Int      @id @default(autoincrement())
  stripe_id   String?  @db.VarChar(50)
  type        String?  @db.VarChar(50)
  status_code String?  @db.VarChar(50)
  data        String   @db.LongText
  response    String?  @db.LongText
  created     DateTime @db.DateTime(0)
}

model stripe_invoice {
  id               Int           @id @default(autoincrement())
  donation_id      Int?
  account_key      String        @db.VarChar(255)
  number_base      String        @db.VarChar(20)
  number_index     String        @db.VarChar(20)
  charge           String?       @db.VarChar(255)
  subscription     String?       @db.VarChar(255)
  stripe_id        String        @unique(map: "UNIQ_BFA226BE3F1B1098") @db.VarChar(255)
  charge_date      DateTime      @db.DateTime(0)
  period_start     DateTime?     @db.DateTime(0)
  period_end       DateTime?     @db.DateTime(0)
  amount           Int
  currency         String        @db.VarChar(3)
  status           String        @db.VarChar(20)
  data             String        @db.LongText
  contribution_uid String?       @db.VarChar(255)
  origin           String?       @db.VarChar(255)
  contribution     contribution? @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_BFA226BE4DC1279C")

  @@index([donation_id], map: "IDX_BFA226BE4DC1279C")
}

model stripe_payout {
  id                        Int                         @id @default(autoincrement())
  account_key               String                      @db.VarChar(255)
  stripe_id                 String                      @unique(map: "UNIQ_E663D43E3F1B1098") @db.VarChar(255)
  amount                    Int
  arrival_date              DateTime                    @db.DateTime(0)
  balance_transaction       String                      @db.VarChar(255)
  currency                  String                      @db.VarChar(3)
  description               String?                     @db.VarChar(255)
  destination               String                      @db.VarChar(255)
  source_type               String                      @db.VarChar(20)
  status                    String                      @db.VarChar(20)
  type                      String                      @db.VarChar(20)
  created                   DateTime                    @db.DateTime(0)
  data                      String                      @db.LongText
  progress_status           String                      @default("none") @db.VarChar(20)
  stripe_payout_transaction stripe_payout_transaction[]
  stripe_transaction        stripe_transaction[]
}

model stripe_payout_transaction {
  id                    Int                @id @default(autoincrement())
  stripe_payout_id      Int
  stripe_transaction_id Int                @unique(map: "UNIQ_1DE88E1E838CF133")
  position              Int
  is_consolidated       Boolean
  stripe_payout         stripe_payout      @relation(fields: [stripe_payout_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1DE88E1E795B3DB5")
  stripe_transaction    stripe_transaction @relation(fields: [stripe_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1DE88E1E838CF133")

  @@index([stripe_payout_id], map: "IDX_1DE88E1E795B3DB5")
}

model stripe_refund {
  id                  Int           @id @default(autoincrement())
  account_key         String        @db.VarChar(255)
  balance_transaction String?       @db.VarChar(255)
  stripe_id           String        @unique(map: "UNIQ_F36169643F1B1098") @db.VarChar(255)
  refund_date         DateTime      @db.DateTime(0)
  amount              Int
  currency            String        @db.VarChar(3)
  charge              String        @db.VarChar(255)
  reason              String?       @db.VarChar(255)
  data                String        @db.LongText
  donation_id         Int?
  contribution        contribution? @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_F36169644DC1279C")

  @@index([donation_id], map: "IDX_F36169644DC1279C")
}

model stripe_subscription {
  id          Int     @id @default(autoincrement())
  account_key String  @db.VarChar(255)
  invoice     String? @db.VarChar(255)
  stripe_id   String  @unique(map: "UNIQ_6F290B433F1B1098") @db.VarChar(255)
  status      String  @db.VarChar(20)
  data        String  @db.LongText
}

model stripe_transaction {
  id                        Int                        @id @default(autoincrement())
  account_key               String                     @db.VarChar(255)
  stripe_id                 String                     @unique(map: "UNIQ_912F00653F1B1098") @db.VarChar(255)
  amount                    Int
  source                    String?                    @db.VarChar(255)
  status                    String                     @db.VarChar(255)
  source_type               String?                    @db.VarChar(32)
  created                   DateTime                   @db.DateTime(0)
  data                      String                     @db.LongText
  donation_id               Int?
  charge_id                 String?                    @db.VarChar(255)
  refund_id                 String?                    @db.VarChar(255)
  net                       Int
  fee                       Int
  description               String?                    @db.LongText
  currency                  String?                    @db.VarChar(20)
  exchange_rate             Float?
  stripe_payout_id          Int?
  position                  Int?
  stripe_payout_transaction stripe_payout_transaction?
  contribution              contribution?              @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_912F00654DC1279C")
  stripe_payout             stripe_payout?             @relation(fields: [stripe_payout_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_912F0065795B3DB5")

  @@index([donation_id], map: "IDX_912F00654DC1279C")
  @@index([stripe_payout_id], map: "IDX_912F0065795B3DB5")
}

model stripe_transfer {
  id                  Int      @id @default(autoincrement())
  account_key         String   @db.VarChar(255)
  stripe_id           String   @unique(map: "UNIQ_1D737FF33F1B1098") @db.VarChar(255)
  amount              Int
  amount_reversed     Int
  balance_transaction String   @db.VarChar(255)
  currency            String   @db.VarChar(3)
  description         String?  @db.VarChar(255)
  destination         String   @db.VarChar(255)
  destination_payment String   @db.VarChar(255)
  source_transaction  String   @db.VarChar(255)
  source_type         String   @db.VarChar(20)
  created             DateTime @db.DateTime(0)
  data                String   @db.LongText
}

model tab_pledges {
  ID                  Int           @id @default(autoincrement())
  CO_USERTYPE         Int?
  CO_USERCOUNTRY      Int?
  P_FNAME             String?       @db.VarChar(255)
  P_LNAME             String?       @db.VarChar(255)
  P_ORG               String?       @db.VarChar(255)
  P_EMAIL             String?       @db.VarChar(150)
  P_ADDRESS           String?       @db.Text
  P_CITY              String?       @db.VarChar(150)
  P_ZIPCODE           String?       @db.VarChar(50)
  P_TEL               String?       @db.VarChar(50)
  P_FAX               String?       @db.VarChar(50)
  P_ISOVER18          Int?          @db.TinyInt
  P_NBTREES           BigInt?
  P_NBLOCALTREES      BigInt?
  P_TREETYPE          String?       @db.Text
  P_PLANTLOCATION     String?       @db.VarChar(255)
  P_PLANTMONTH        Int?
  P_PLANTYEAR         Int?
  P_LANG              String?       @db.VarChar(10)
  P_NBPLANTED         BigInt?
  P_NBLOCALPLANTED    BigInt?
  oPUBLISH            Int?          @db.TinyInt
  LMOD                DateTime?     @db.Timestamp(0)
  PointerToKunde      Int
  Geo                 String?       @db.VarChar(100)
  LastMail            DateTime?     @db.Date
  Verified            Int?
  HelpNowID           Int
  location_x          Float?
  location_y          Float?
  score               Int?
  esri_tree_country   String?       @db.VarChar(5)
  esri_tree_x         Float?
  esri_tree_y         Float?
  esri_tree_score     Float?
  esri_tree_addr      String?       @db.VarChar(255)
  esri_person_country String?       @db.VarChar(5)
  esri_person_x       Float?
  esri_person_y       Float?
  esri_person_score   Float?
  esri_person_addr    String?       @db.VarChar(255)
  plant_action        plant_action?

  @@index([CO_USERCOUNTRY, ID], map: "Country")
  @@index([P_EMAIL, ID], map: "EMAIL")
  @@index([LMOD], map: "LMOD")
  @@index([PointerToKunde], map: "PtoK")
  @@index([Verified, LMOD], map: "Verify")
  @@index([P_NBPLANTED], map: "treesPlanted")
  @@index([P_NBTREES], map: "treesPledge")
}

model tag {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  user_profile_tag user_profile_tag[]
}

model target_log {
  id             Int          @id @default(autoincrement())
  treecounter_id Int?
  created_by     Int?
  count_target   Decimal      @db.Decimal(17, 2)
  target_year    Int?
  target_comment String?      @db.LongText
  created        DateTime     @db.DateTime(0)
  treecounter    treecounter? @relation(fields: [treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_402F4A3076C637A1")
  fos_user       fos_user?    @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_402F4A30DE12AB56")

  @@index([treecounter_id], map: "IDX_402F4A3076C637A1")
  @@index([created_by], map: "IDX_402F4A30DE12AB56")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model temp_receipts {
  uid          String?   @db.VarChar(50)
  id           Int       @default(0)
  created_by   Int?
  updated_by   Int?
  companyname  String?   @db.VarChar(255)
  firstname    String?   @db.VarChar(50)
  lastname     String?   @db.VarChar(50)
  email        String?   @db.VarChar(50)
  address1     String?   @db.VarChar(255)
  zip_code     String?   @db.VarChar(15)
  city         String?   @db.VarChar(255)
  country_code String?   @db.VarChar(2)
  created      DateTime  @db.DateTime(0)
  updated      DateTime  @db.DateTime(0)
  deleted_at   DateTime? @db.DateTime(0)

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tenant {
  id                                   Int                  @id @default(autoincrement())
  created_by                           Int?
  updated_by                           Int?
  guid                                 String               @unique(map: "UNIQ_4E59C4622B6FCFB2") @db.VarChar(32)
  secret                               String               @db.VarChar(255)
  name                                 String               @db.VarChar(255)
  description                          String?              @db.VarChar(255)
  is_default                           Boolean?             @unique(map: "UNIQ_4E59C462F5628617")
  is_active                            Boolean
  created                              DateTime             @db.DateTime(0)
  deleted_at                           DateTime?            @db.DateTime(0)
  config                               String?              @db.LongText
  top_projects_only                    Boolean              @default(false)
  updated                              DateTime?            @db.DateTime(0)
  image                                String?              @db.VarChar(255)
  tenant_goal                          Int?
  featured_image                       String?              @db.VarChar(255)
  banner_image                         String?              @db.VarChar(255)
  favicon                              String?              @db.VarChar(255)
  has_sequential_donor_ids             Boolean
  contribution                         contribution[]
  recurrency_stencil                   recurrency_stencil[]
  fos_user_tenant_updated_byTofos_user fos_user?            @relation("tenant_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4E59C46216FE72E1")
  fos_user_tenant_created_byTofos_user fos_user?            @relation("tenant_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4E59C462DE12AB56")
  tenant_donor                         tenant_donor[]
  tenant_project                       tenant_project[]
  tenant_tpo                           tenant_tpo[]

  @@index([updated_by], map: "IDX_4E59C46216FE72E1")
  @@index([created_by], map: "IDX_4E59C462DE12AB56")
}

model tenant_donor {
  id              Int     @id @default(autoincrement())
  user_profile_id Int
  tenant_id       Int
  sequential_id   Int
  profile         profile @relation(fields: [user_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_C862ACA36B9DD454")
  tenant          tenant  @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_C862ACA39033212A")

  @@index([user_profile_id], map: "IDX_C862ACA36B9DD454")
  @@index([tenant_id], map: "IDX_C862ACA39033212A")
}

model tenant_project {
  id            Int           @id @default(autoincrement())
  tenant_id     Int
  project_id    Int
  position      Int
  plant_project plant_project @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3D2592DA166D1F9C")
  tenant        tenant        @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3D2592DA9033212A")

  @@unique([tenant_id, project_id], map: "unique_tenant_project")
  @@index([project_id], map: "IDX_3D2592DA166D1F9C")
  @@index([tenant_id], map: "IDX_3D2592DA9033212A")
}

model tenant_tpo {
  tenant_id Int
  tpo_id    Int
  profile   profile @relation(fields: [tpo_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_EE748EC522E6F5CC")
  tenant    tenant  @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_EE748EC59033212A")

  @@id([tenant_id, tpo_id])
  @@index([tpo_id], map: "IDX_EE748EC522E6F5CC")
  @@index([tenant_id], map: "IDX_EE748EC59033212A")
}

model tink_account {
  id                                         Int                @id @default(autoincrement())
  payment_account_id                         Int?
  created_by                                 Int?
  updated_by                                 Int?
  account_number                             String             @db.VarChar(64)
  bank_id                                    String             @db.VarChar(32)
  uuid                                       String             @db.VarChar(64)
  holder_name                                String             @db.VarChar(255)
  iban                                       String             @db.VarChar(32)
  currency                                   String             @db.VarChar(3)
  type                                       String             @db.VarChar(32)
  name                                       String?            @db.VarChar(255)
  data                                       Json
  institution_uuid                           String             @db.VarChar(64)
  is_active                                  Boolean
  created                                    DateTime           @db.DateTime(0)
  updated                                    DateTime           @db.DateTime(0)
  deleted_at                                 DateTime?          @db.DateTime(0)
  fos_user_tink_account_updated_byTofos_user fos_user?          @relation("tink_account_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A44975316FE72E1")
  payment_account                            payment_account?   @relation(fields: [payment_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A449753AE9DDE6F")
  fos_user_tink_account_created_byTofos_user fos_user?          @relation("tink_account_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A449753DE12AB56")
  tink_transaction                           tink_transaction[]

  @@index([updated_by], map: "IDX_A44975316FE72E1")
  @@index([payment_account_id], map: "IDX_A449753AE9DDE6F")
  @@index([created_by], map: "IDX_A449753DE12AB56")
}

model tink_transaction {
  id                                             Int                @id @default(autoincrement())
  tink_account_id                                Int
  donation_id                                    Int?
  created_by                                     Int?
  updated_by                                     Int?
  uuid                                           String             @unique(map: "UNIQ_2A832853D17F50A6") @db.VarChar(64)
  account_uuid                                   String             @db.VarChar(64)
  amount                                         Int
  currency                                       String             @db.VarChar(3)
  booking_date                                   DateTime           @db.Date
  description                                    String             @db.LongText
  status                                         String             @db.VarChar(64)
  progress_status                                String             @db.VarChar(32)
  data                                           Json
  donation_uid                                   String?            @db.VarChar(16)
  comment                                        String?            @db.LongText
  created                                        DateTime           @db.DateTime(0)
  updated                                        DateTime           @db.DateTime(0)
  parent_id                                      Int?
  has_children                                   Boolean
  fos_user_tink_transaction_updated_byTofos_user fos_user?          @relation("tink_transaction_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2A83285316FE72E1")
  tink_account                                   tink_account       @relation(fields: [tink_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2A832853470ACC87")
  contribution                                   contribution?      @relation(fields: [donation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2A8328534DC1279C")
  tink_transaction                               tink_transaction?  @relation("tink_transactionTotink_transaction", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2A832853727ACA70")
  other_tink_transaction                         tink_transaction[] @relation("tink_transactionTotink_transaction")
  fos_user_tink_transaction_created_byTofos_user fos_user?          @relation("tink_transaction_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2A832853DE12AB56")

  @@index([updated_by], map: "IDX_2A83285316FE72E1")
  @@index([tink_account_id], map: "IDX_2A832853470ACC87")
  @@index([donation_id], map: "IDX_2A8328534DC1279C")
  @@index([parent_id], map: "IDX_2A832853727ACA70")
  @@index([created_by], map: "IDX_2A832853DE12AB56")
}

model tpo_donor_proxy {
  id                                                                Int            @id @default(autoincrement())
  tpo_id                                                            Int
  treecounter_id                                                    Int?
  created_by                                                        Int?
  updated_by                                                        Int?
  remote_donor_uid                                                  String         @db.VarChar(255)
  token                                                             String         @unique(map: "UNIQ_B804D29E5F37A13B") @db.VarChar(255)
  created                                                           DateTime       @db.DateTime(0)
  updated                                                           DateTime       @db.DateTime(0)
  deleted_at                                                        DateTime?      @db.DateTime(0)
  guid                                                              String?        @unique(map: "UNIQ_B804D29E2B6FCFB2") @db.VarChar(32)
  contribution_contribution_tpo_donor_proxy_idTotpo_donor_proxy     contribution[] @relation("contribution_tpo_donor_proxy_idTotpo_donor_proxy")
  contribution_contribution_tpo_recipient_proxy_idTotpo_donor_proxy contribution[] @relation("contribution_tpo_recipient_proxy_idTotpo_donor_proxy")
  redeemable                                                        redeemable[]
  fos_user_tpo_donor_proxy_updated_byTofos_user                     fos_user?      @relation("tpo_donor_proxy_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B804D29E16FE72E1")
  profile                                                           profile        @relation(fields: [tpo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B804D29E22E6F5CC")
  treecounter                                                       treecounter?   @relation(fields: [treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B804D29E76C637A1")
  fos_user_tpo_donor_proxy_created_byTofos_user                     fos_user?      @relation("tpo_donor_proxy_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_B804D29EDE12AB56")

  @@unique([tpo_id, remote_donor_uid], map: "unique_tpo_donor")
  @@unique([tpo_id, treecounter_id], map: "unique_tpo_treecounter")
  @@index([updated_by], map: "IDX_B804D29E16FE72E1")
  @@index([tpo_id], map: "IDX_B804D29E22E6F5CC")
  @@index([treecounter_id], map: "IDX_B804D29E76C637A1")
  @@index([created_by], map: "IDX_B804D29EDE12AB56")
  @@index([remote_donor_uid], map: "remote_donor_uid_idx")
}

model tpo_sync_log {
  id                  Int      @id @default(autoincrement())
  contribution_uid    String   @db.VarChar(50)
  remote_donation_uid String?  @db.VarChar(50)
  request             String   @db.LongText
  response            String?  @db.LongText
  exception           String?  @db.LongText
  status              String   @db.VarChar(20)
  created             DateTime @db.DateTime(0)
  updated             DateTime @db.DateTime(0)
  uri                 String   @db.VarChar(255)
}

model tree_allocation {
  id                                            Int            @id @default(autoincrement())
  subject_id                                    Int
  plant_location_id                             Int
  created_by                                    Int?
  updated_by                                    Int?
  tree_count                                    Int
  created                                       DateTime       @db.DateTime(0)
  updated                                       DateTime       @db.DateTime(0)
  is_private                                    Boolean        @default(false)
  fos_user_tree_allocation_updated_byTofos_user fos_user?      @relation("tree_allocation_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A757DB2B16FE72E1")
  contribution                                  contribution   @relation(fields: [subject_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A757DB2B23EDC87")
  plant_location                                plant_location @relation(fields: [plant_location_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A757DB2BD6D3662E")
  fos_user_tree_allocation_created_byTofos_user fos_user?      @relation("tree_allocation_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_A757DB2BDE12AB56")

  @@index([updated_by], map: "IDX_A757DB2B16FE72E1")
  @@index([subject_id], map: "IDX_A757DB2B23EDC87")
  @@index([plant_location_id], map: "IDX_A757DB2BD6D3662E")
  @@index([created_by], map: "IDX_A757DB2BDE12AB56")
}

model tree_donation {
  id                 Int            @id @default(autoincrement())
  tree_count         Int
  user_profile       Int
  remote_donation_id Int?
  token              String?        @db.VarChar(64)
  creation_date      DateTime?      @db.DateTime(0)
  payment_date       DateTime?      @db.DateTime(0)
  plantProject_id    Int?
  plant_project      plant_project? @relation(fields: [plantProject_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_52296ADB91E02EC9")

  @@index([plantProject_id], map: "IDX_52296ADB91E02EC9")
}

model treecode_bulk {
  id                                          Int                     @id @default(autoincrement())
  tpo_id                                      Int
  plant_project_id                            Int?
  created_by                                  Int?
  updated_by                                  Int?
  serial_no_count                             Int
  treecode_count                              Int
  weight                                      Decimal                 @db.Decimal(10, 4)
  name                                        String                  @db.VarChar(255)
  description                                 String?                 @db.LongText
  created                                     DateTime                @db.DateTime(0)
  updated                                     DateTime                @db.DateTime(0)
  deleted_at                                  DateTime?               @db.DateTime(0)
  redeemable                                  redeemable[]
  fos_user_treecode_bulk_updated_byTofos_user fos_user?               @relation("treecode_bulk_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8A9E128E16FE72E1")
  profile                                     profile                 @relation(fields: [tpo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8A9E128E22E6F5CC")
  fos_user_treecode_bulk_created_byTofos_user fos_user?               @relation("treecode_bulk_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8A9E128EDE12AB56")
  plant_project                               plant_project?          @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8A9E128EE83C4879")
  treecode_number_block                       treecode_number_block[]

  @@index([updated_by], map: "IDX_8A9E128E16FE72E1")
  @@index([tpo_id], map: "IDX_8A9E128E22E6F5CC")
  @@index([created_by], map: "IDX_8A9E128EDE12AB56")
  @@index([plant_project_id], map: "IDX_8A9E128EE83C4879")
}

model treecode_number_block {
  id                                                  Int            @id @default(autoincrement())
  treecode_production_id                              Int?
  created_by                                          Int?
  updated_by                                          Int?
  is_generated                                        Boolean
  min                                                 Int
  max                                                 Int
  created                                             DateTime       @db.DateTime(0)
  updated                                             DateTime       @db.DateTime(0)
  deleted_at                                          DateTime?      @db.DateTime(0)
  fos_user_treecode_number_block_updated_byTofos_user fos_user?      @relation("treecode_number_block_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_129E3F4216FE72E1")
  treecode_bulk                                       treecode_bulk? @relation(fields: [treecode_production_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_129E3F4234E1F38E")
  fos_user_treecode_number_block_created_byTofos_user fos_user?      @relation("treecode_number_block_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_129E3F42DE12AB56")

  @@index([updated_by], map: "IDX_129E3F4216FE72E1")
  @@index([treecode_production_id], map: "IDX_129E3F4234E1F38E")
  @@index([created_by], map: "IDX_129E3F42DE12AB56")
}

model treecounter {
  id                                                                                 Int                      @id @default(autoincrement())
  treecounter_log_id                                                                 Int?                     @unique(map: "UNIQ_571E40AC99D8592")
  display_name                                                                       String                   @db.VarChar(255)
  is_abstract                                                                        Boolean?
  slug                                                                               String                   @unique(map: "UNIQ_571E40A989D9B62") @db.VarChar(255)
  hash                                                                               String                   @db.VarChar(32)
  may_publish                                                                        Boolean?
  count_registered                                                                   Decimal                  @db.Decimal(17, 2)
  count_donated                                                                      Decimal                  @db.Decimal(17, 2)
  count_personal                                                                     Decimal                  @db.Decimal(17, 2)
  count_planted                                                                      Decimal                  @db.Decimal(17, 2)
  count_given                                                                        Decimal                  @db.Decimal(17, 2)
  count_received                                                                     Decimal                  @db.Decimal(17, 2)
  count_target                                                                       Decimal?                 @db.Decimal(17, 2)
  implicit_target                                                                    Decimal                  @db.Decimal(17, 2)
  target_year                                                                        Int?
  target_comment                                                                     String?                  @db.LongText
  created                                                                            DateTime                 @db.DateTime(0)
  updated                                                                            DateTime                 @db.DateTime(0)
  is_dirty                                                                           Boolean
  uid                                                                                Int?
  count_project_donated                                                              Decimal                  @db.Decimal(17, 2)
  challenge_challenge_challenged_treecounter_idTotreecounter                         challenge[]              @relation("challenge_challenged_treecounter_idTotreecounter")
  challenge_challenge_challenger_treecounter_idTotreecounter                         challenge[]              @relation("challenge_challenger_treecounter_idTotreecounter")
  competition                                                                        competition[]
  competition_enrollment_competition_enrollment_competitor_reference_idTotreecounter competition_enrollment[] @relation("competition_enrollment_competitor_reference_idTotreecounter")
  competition_enrollment_competition_enrollment_competitor_idTotreecounter           competition_enrollment[] @relation("competition_enrollment_competitor_idTotreecounter")
  contribution_contribution_community_treecounter_idTotreecounter                    contribution[]           @relation("contribution_community_treecounter_idTotreecounter")
  contribution_contribution_gift_treecounter_idTotreecounter                         contribution[]           @relation("contribution_gift_treecounter_idTotreecounter")
  contribution_contribution_treecounter_idTotreecounter                              contribution[]           @relation("contribution_treecounter_idTotreecounter")
  follow_follow_followee_idTotreecounter                                             follow[]                 @relation("follow_followee_idTotreecounter")
  follow_follow_follower_idTotreecounter                                             follow[]                 @relation("follow_follower_idTotreecounter")
  gift_invitation                                                                    gift_invitation[]
  plant_project                                                                      plant_project[]
  pledge_event                                                                       pledge_event[]
  profile_profile_treecounter_idTotreecounter                                        profile?                 @relation("profile_treecounter_idTotreecounter")
  profile_profile_supported_treecounter_idTotreecounter                              profile[]                @relation("profile_supported_treecounter_idTotreecounter")
  recurrency_stencil                                                                 recurrency_stencil[]
  redeemable                                                                         redeemable[]
  target_log                                                                         target_log[]
  tpo_donor_proxy                                                                    tpo_donor_proxy[]
  treecounter_log                                                                    treecounter_log?         @relation(fields: [treecounter_log_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_571E40AC99D8592")
  treecounter_group                                                                  treecounter_group?

  @@index([hash], map: "hash_idx")
}

model treecounter_group {
  id                                                                     Int                 @id @default(autoincrement())
  root_id                                                                Int?
  parent_id                                                              Int?
  treecounter_id                                                         Int?                @unique(map: "UNIQ_4E7FEF3276C637A1")
  slug                                                                   String?             @db.VarChar(255)
  lft                                                                    Int
  lvl                                                                    Int
  rgt                                                                    Int
  treecounter_group_treecounter_group_parent_idTotreecounter_group       treecounter_group?  @relation("treecounter_group_parent_idTotreecounter_group", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_4E7FEF32727ACA70")
  other_treecounter_group_treecounter_group_parent_idTotreecounter_group treecounter_group[] @relation("treecounter_group_parent_idTotreecounter_group")
  treecounter                                                            treecounter?        @relation(fields: [treecounter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_4E7FEF3276C637A1")
  treecounter_group_treecounter_group_root_idTotreecounter_group         treecounter_group?  @relation("treecounter_group_root_idTotreecounter_group", fields: [root_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_4E7FEF3279066886")
  other_treecounter_group_treecounter_group_root_idTotreecounter_group   treecounter_group[] @relation("treecounter_group_root_idTotreecounter_group")

  @@index([parent_id], map: "IDX_4E7FEF32727ACA70")
  @@index([root_id], map: "IDX_4E7FEF3279066886")
}

model treecounter_log {
  id                         Int            @id @default(autoincrement())
  dirty_marker               String?        @db.VarChar(32)
  count_planted              Decimal?       @db.Decimal(17, 2)
  count_donated              Decimal?       @db.Decimal(17, 2)
  count_received             Decimal?       @db.Decimal(17, 2)
  count_target               Decimal?       @db.Decimal(17, 2)
  contribution_type          String         @db.VarChar(50)
  contribution_geo_latitude  Decimal?       @db.Decimal(10, 6)
  contribution_geo_longitude Decimal?       @db.Decimal(10, 6)
  contribution_country       String?        @db.VarChar(3)
  giver_id                   Int?
  contributor_type           String?        @db.VarChar(20)
  contributor_sub_type       String?        @db.VarChar(40)
  contributor_slug           String?        @db.VarChar(255)
  contributor_fullname       String?        @db.VarChar(255)
  contributor_name           String?        @db.VarChar(255)
  contributor_firstname      String?        @db.VarChar(255)
  contributor_lastname       String?        @db.VarChar(255)
  contributor_geo_latitude   Decimal?       @db.Decimal(10, 6)
  contributor_geo_longitude  Decimal?       @db.Decimal(10, 6)
  contributor_country        String?        @db.VarChar(3)
  may_publish                Boolean?
  date_performed             DateTime?      @db.DateTime(0)
  treecounter_id             Int?
  contributor_avatar         String?        @db.VarChar(255)
  contribution               contribution[]
  treecounter                treecounter?
}

model treedonor_plant_project {
  treedonor_id     Int
  plant_project_id Int
  profile          profile       @relation(fields: [treedonor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_C8621D788318F4C7")
  plant_project    plant_project @relation(fields: [plant_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_C8621D78E83C4879")

  @@id([treedonor_id, plant_project_id])
  @@index([treedonor_id], map: "IDX_C8621D788318F4C7")
  @@index([plant_project_id], map: "IDX_C8621D78E83C4879")
}

model treemapper_profile_project {
  id                                                       Int           @id @default(autoincrement())
  profile_id                                               Int           @unique(map: "UNIQ_2E4EF5FDCCFA12B8")
  plant_project_id                                         Int
  created_by                                               Int?
  updated_by                                               Int?
  created                                                  DateTime      @db.DateTime(0)
  updated                                                  DateTime      @db.DateTime(0)
  fos_user_treemapper_profile_project_updated_byTofos_user fos_user?     @relation("treemapper_profile_project_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2E4EF5FD16FE72E1")
  profile                                                  profile       @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2E4EF5FDCCFA12B8")
  fos_user_treemapper_profile_project_created_byTofos_user fos_user?     @relation("treemapper_profile_project_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2E4EF5FDDE12AB56")
  plant_project                                            plant_project @relation(fields: [plant_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2E4EF5FDE83C4879")

  @@index([updated_by], map: "IDX_2E4EF5FD16FE72E1")
  @@index([created_by], map: "IDX_2E4EF5FDDE12AB56")
  @@index([plant_project_id], map: "IDX_2E4EF5FDE83C4879")
}

model user_notification {
  id      Int     @id @default(autoincrement())
  uid     String  @unique(map: "UNIQ_3F980AC8539B0606") @db.VarChar(50)
  type    String  @db.VarChar(50)
  caption String? @db.VarChar(255)
  text    String  @db.LongText
}

model user_profile_tag {
  user_profile_id Int
  tag_id          Int
  profile         profile @relation(fields: [user_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_430D7296B9DD454")
  tag             tag     @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_430D729BAD26311")

  @@id([user_profile_id, tag_id])
  @@index([user_profile_id], map: "IDX_430D7296B9DD454")
  @@index([tag_id], map: "IDX_430D729BAD26311")
}

model userfeed {
  id                                      Int       @id @default(autoincrement())
  recipient_id                            Int
  originator_id                           Int
  created_by                              Int?
  updated_by                              Int?
  type                                    String    @db.VarChar(50)
  options                                 String?   @db.LongText
  viewed                                  Boolean
  created                                 DateTime  @db.DateTime(0)
  updated                                 DateTime  @db.DateTime(0)
  deleted_at                              DateTime? @db.DateTime(0)
  fos_user_userfeed_updated_byTofos_user  fos_user? @relation("userfeed_updated_byTofos_user", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_853D3CDA16FE72E1")
  profile_userfeed_originator_idToprofile profile   @relation("userfeed_originator_idToprofile", fields: [originator_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_853D3CDA3DA3F86F")
  fos_user_userfeed_created_byTofos_user  fos_user? @relation("userfeed_created_byTofos_user", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_853D3CDADE12AB56")
  profile_userfeed_recipient_idToprofile  profile   @relation("userfeed_recipient_idToprofile", fields: [recipient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_853D3CDAE92F8F78")

  @@index([updated_by], map: "IDX_853D3CDA16FE72E1")
  @@index([originator_id], map: "IDX_853D3CDA3DA3F86F")
  @@index([created_by], map: "IDX_853D3CDADE12AB56")
  @@index([recipient_id], map: "IDX_853D3CDAE92F8F78")
}
